#!/usr/bin/env node

/**
 * Module dependencies.
 */
var app = require('../app');
var debug = require('debug')('project-shield:server');
var http = require('http');
var firebase = require('firebase');
var linebot = require('linebot');
const line = require('@line/bot-sdk');
var apiai = require('apiai');
var mysql = require('mysql');//mysql

var config = {
    apiKey: "AIzaSyAqzIra9YkeE0HZZBSwXrjh4GemO7yVdmI",
    authDomain: "shield-88fd0.firebaseapp.com",
    databaseURL: "https://shield-88fd0.firebaseio.com",
    projectId: "shield-88fd0",
    storageBucket: "shield-88fd0.appspot.com",
    messagingSenderId: "376341346069"
};
// mysql(需要有開mysql 這裡的mysql是光愷架的，若是他今天不在，資料庫沒開就需要註解調。
var con = mysql.createConnection({
  host: "192.168.0.135",
  path: "%",
  user: "newuser",
  password: "shield123"
});

con.connect(function(err) {
  if (err) throw err;
  console.log("Shield in MySQL Connected!");
});
// mysql
firebase.initializeApp(config);

const usersRef = firebase.database().ref().child('chats/users');
const agentsRef = firebase.database().ref().child('chats/agents');
const newDBRef = firebase.database().ref().child('chats/Data');
const auth = firebase.auth();
// console.log(auth.app);
var chatData;
newDBRef.on('value', snapshot=> {
   chatData = snapshot.val();
   console.log("chat data loading complete!");
  // ...
});

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);
const io = require('socket.io').listen(server);

/**
 * Variables
 */
var users = {};
var type_sticker = 0;
//webhook event
var message_lineTochat;
var receiverId = 'Ue369116591fbd2d13a7eb5f0ff12547b';
// LINE bot設定
var bot = linebot({
    channelId: '1532472427',
    channelSecret: '81ca260d25e25dc4fad6e70776dd78a5',
    channelAccessToken: '1zsiy8ry6PWAJnVH9IVOpU9e/v9+P1K0hl36GABcg3rwzttpuY7M17RZ8r9RD9ToLhJA5rDP+V2m5XHDp6Dd63EnMlqhUdxjrjRsyGBvn5itKN6qZC8GDEdS27pcSNe9E3EdPHFA3gWFvJfruTMPPgdB04t89/1O/w1cDnyilFU='
});
const linebotParser = bot.parser();
const client = new line.Client({
    channelAccessToken: '1zsiy8ry6PWAJnVH9IVOpU9e/v9+P1K0hl36GABcg3rwzttpuY7M17RZ8r9RD9ToLhJA5rDP+V2m5XHDp6Dd63EnMlqhUdxjrjRsyGBvn5itKN6qZC8GDEdS27pcSNe9E3EdPHFA3gWFvJfruTMPPgdB04t89/1O/w1cDnyilFU='
});

// api ai setting
// var appApiai = apiai("6fd13e1dd00b4d93881e1e75cdf02bd4");
//
//yelp-search
const yelp = require('yelp-fusion');
const yelp_id = 'myyIL1Ms5JszMcXodC-o_w';
const yelp_secret = 'Zw94mu0DGLFSmjG2at4wqSpdxtUC9TrWn6yVYUNhpLEpj4C11tzAPblLXRhpsRLh';
var yelp_token;
const token = yelp.accessToken(yelp_id, yelp_secret).then(response => {
  console.log(response.jsonBody.access_token);
  yelp_token = response.jsonBody.access_token;
}).catch(e => {
  console.log(e);
});
var z;
var z2;
var z3;
var x;
var x2;
var x3;
var y;
var w;
var w1;
var w2;
var n;
//yelp-search
//抓日期
var Today = new Date();
var day_list = ['星期日','星期一','星期二','星期三','星期四','星期五','星期六'];
var day = Today.getDay();
var YY = Today.getFullYear();
var MM = (Today.getMonth()+1);
var DD = Today.getDate();
var count = 0;
console.log(day);
/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

// 接收訊息
// LINE bot implement
//LINE bot postback
// bot.on('postback', event =>{
//   console.log(event);
//       // if (event.message.type === 'text' && message_lineTochat.trim() === '預約確認') {
//       //   let booking = '您的預約是XXXX-XX-XX，詳情如下:XX:XX-XX:XX';
//       //   io.sockets.emit('new message', {
//       //       msg: booking,
//       //       name: receiverId
//       //   });
//       var Rdate = event.postback.data;
//         console.log(Rdate);
//         event.reply({
//        "type": "template",
//        "altText": "this is a confirm template",
//        "template": {
//            "type": "confirm",
//            "text": '您預約面試的時間\n'+Rdate,//postback資料
//            "actions": [
//                {
//                  "type": "message",
//                  "label": "確認",
//                  "text": "預約確認"
//                },
//                {
//                  "type": "message",
//                  "label": "取消",
//                  "text": "預約取消"
//                }
//            ]
//        }
//      })
//       // }
//
// }
// )

bot.on('message', event => {
    console.log(event);
    let d = Date.now();//日期
    let date = new Date(d);//日期
    let message_type = event.message.type;
    let address = event.message.address;
    let latitude = event.message.latitude;
    let longitude = event.message.longitude;
    let message_lineTochat = event.message.text;
    let receiverId = event.source.userId;
    let receiver_name;
    let postion;
    var RQuestion;
    // console.log(receiverId);
    var msgObj = {
      owner: "user",
      name: receiver_name,
      time: d
    };
    function emitIO_and_pushDB(obj) {
      // console.log("sending to io sockets...");
      // io.sockets.emit('new message', obj);
      // console.log("io sockets sent!");
      // console.log("sending to old firebase database...");
      // usersRef.push(obj);
      // console.log("DB sent!");

      console.log("sending object user: ");
      console.log(obj);
      // console.log("sending to local DB");
      // sendToLocalDB(obj);
      console.log("sending to new firebase database");
      sendToNewFb(obj);
      console.log("sending to new io sockets...");
      sendToFrontSocket(obj);
      console.log("All sent!");
    }
    function sendToFrontSocket(obj) {
      obj.id = receiverId;
      io.sockets.emit('new message2', obj);
    }
    function sendToNewFb(obj){
      let flag = true;
      for( let prop in chatData ) {
        if(chatData[prop].Profile.userId == receiverId) {
          console.log("find user " + receiverId + " in database");
          let length = chatData[prop].Messages.length;
          let updateObj = {};
          updateObj['/'+prop+'/Messages/'+length] = obj;
          newDBRef.update(updateObj);
          newDBRef.child(prop).child("Profile").update({
            unRead: true,
            photo: profile.pictureUrl
          });
          flag = false;
          break;
        }
      }
      if( flag ) {
        console.log("new user come in");
        let newData = {
          Profile: {
            nickname: receiver_name,
            userId: receiverId,
            age: -1,
            telephone: "",
            address: "",
            firstChat: d,
            recentChat: d,
            totalChat: 1,
            avgChat: 1,
            unRead: true
          },
          Messages: [obj]
        };
        newDBRef.push(newData);
      }
    }
    function vote(voter, time, categoryName, workerName, groupName, score) {
      // let voter= "U123";
      // let time= new Date(Date.now());
      // let categoryName= "飯店";
      // let workerName= "王子大飯店";
      // let groupName = "台南EAT";
      // let score = 4;

      console.log(time);
      let categoryId;
      let workerId;
      let groupId;

      con.query( "SELECT * FROM shield.category WHERE category_name = ?", categoryName, function( err, result, fields) {
        console.log("result:");
        console.log(result);
        console.log("result[0]:");    //理論上result只會有單一資料，但還是會是ARRAY形式，所以需使用result[0]獲得那筆資料
        console.log(result[0]);
        console.log("use 'result[0].ID' to get category ID");
        console.log(result[0].ID);
        categoryId = result[0].ID;
      });
      con.query( "SELECT * FROM shield.worker WHERE worker_name = ?", workerName, function( err, result, fields) {
        workerId = result[0].ID;
      });
      con.query( "SELECT * FROM shield.group WHERE group_name = ?", groupName, function( err, result, fields) {
        groupId = result[0].ID;
      });

      let timer = setInterval( insert_vote, 10 );
      //因前面幾個資料庫操作是異步操作 可能會發生還沒抓完資料就繼續執行的情況
      //所以用setInterval包起來，確認值都有收到後，再寫進資料庫並停止setInterval
      function insert_vote() {
        if( !categoryId || !workerId || !groupId ) return;
        clearInterval(timer);
        let obj = {
          vote_voter: voter,
          vote_time: time,
          category_id: categoryId,
          worker_id: workerId,
          group_id: groupId,
          vote_score: score
        };
        console.log("to insert obj = ");
        console.log(obj);

        con.query( "INSERT INTO shield.vote SET ? ", obj, function(err, rows) {
          if( err ) {
            console.log("ERROR INSERT VOTE");
            throw err;
          }
          else {
            console.log("SUCCESS INSERT VOTE! obj =");
            console.log(obj);
          } //end else
        }); //end con.query
      } //end insert_vote
    }
    // select_4();
    function select_4() {
      con.query("SELECT * FROM shield.vote WHERE vote_voter = ? and group_id = ?", [receiverId, 4], function (err, result, fields) {
        if(result.length >= 50){
          console.log("已填完問卷");
        }
        if (err) {
          console.log("select error");
          throw err;
        }
        console.log("select 志節ID and 台北TPE團 result:");
        console.log(result);
      });
    }
    // from wenyen
    //  ===================  KINDS ====================
    if (message_type === 'sticker') {

        io.sockets.emit('new message', {
            msg: 'Sticker received. Please check your phone.',
            name: receiverId
        });

        type_sticker += 1;


    } else if (message_type === 'location') {
        io.sockets.emit('new message', {
            msg: 'Location received: ',
            name: receiverId
        });
        io.sockets.emit('new message', {
            msg: address,
            name: receiverId
        });
        //yelp-search
        setTimeout(() => {
          const yelp_client = yelp.client(yelp_token);
          yelp_client.search({
            term:zxc,//餐廳種類
            locale:'zh_TW', //語系
            location: address,
          }).then(response => {
            z = response.jsonBody.businesses[1].name;
            z2 = response.jsonBody.businesses[2].name;
            z3 = response.jsonBody.businesses[3].name;

            x = response.jsonBody.businesses[1].image_url;
            x2 = response.jsonBody.businesses[2].image_url;
            x3 = response.jsonBody.businesses[3].image_url;

            y = response.jsonBody.businesses[1].location.display_address;
            y2 = response.jsonBody.businesses[2].location.display_address;
            y3 = response.jsonBody.businesses[3].location.display_address;

            w = response.jsonBody.businesses[1].url;
            w2 = response.jsonBody.businesses[2].url;
            w3 = response.jsonBody.businesses[3].url;

            n = response.jsonBody.businesses[1].location;
          event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
              "thumbnailImageUrl": x,
                "title": z,
                "text": y[0]+y[1],//抓陣列中所需要的值作為字串(因為這裡陣列會無法顯示)
                "actions": [{
                  "type": 'uri',
                  "label": '觀看餐廳資訊',
                  "uri": w
                }]
            },{
              "thumbnailImageUrl": x2,
                "title": z2,
                "text": y2[0]+y2[1],
                "actions": [{
                  "type": 'uri',
                  "label": '觀看餐廳資訊',
                  "uri": w2
                }]
            },{
              "thumbnailImageUrl": x3,
                "title": z3,
                "text": y3[0]+y3[1],
                "actions": [{
                  "type": 'uri',
                  "label": '觀看餐廳資訊',
                  "uri": w3
                }]
            }
          ]
            }
          })
            console.log('z:'+z);
            console.log('x:'+x);
            console.log(n);
          }).catch(e => {
            console.log(e);
          });
      }, 2000);
      //yelp-search
        event.message.content().then(function(content) {
            /*'base64'是圖片的編碼*/
            console.log(content);
            // console.log(content.toString('base64'));
            /*把編碼轉換成圖片(image/png)做成連結的方式*/
            io.sockets.emit('new message', {
                msg: '<a target="_blank" href=" https://www.google.com.tw/maps/place/' + content.toString('base64') + '/@' + latitude + ',' + longitude + ',15z/data=!4m5!3m4!1s0x0:0x496596e7748a5757!8m2!3d' + latitude + '!4d' + longitude + '">LOCATION LINK</a>',
                name: receiverId
            });
        }).catch(function(error) {
            // error
        });

    } else if (message_type === 'image') {
        io.sockets.emit('new message', {
            msg: 'Image received. Please wait for the link below',
            name: receiverId
        });

        event.message.content().then(function(content) {
            /*'base64'是圖片的編碼*/
            console.log(content.toString('base64'));
            /*把編碼轉換成圖片(image/png)做成連結的方式*/
            io.sockets.emit('new message', {
                msg: '<a target="_blank" href="data:image/png;base64,' + content.toString('base64') + '" ' +
                    'width="70" height="38" alt="image embedded using base64 encoding!">IMAGE LINK</a>',
                name: receiverId
            });

        }).catch(function(error) {
            // error
            console.log(error);
        });

    } else if (message_type === 'audio') {
        io.sockets.emit('new message', {
            msg: 'Audio received. Please wait for the link below.',
            name: receiverId
        });
        event.message.content().then(function(content) {
            console.log(content.toString('base64'));
            io.sockets.emit('new message', {
                msg: '<a target="_blank" href="data:audio/mp4;base64,' + content.toString('base64') + '" ' +
                    '">AUDIO LINK</a>',
                name: receiverId
            });

        }).catch(function(error) {
            // error
            console.log(error);
        });
    } else if (message_type === 'video') {
        io.sockets.emit('new message', {
            msg: 'Video received. Please wait for the link below.',
            name: receiverId
        });
        event.message.content().then(function(content) {
            console.log(content.toString('base64'));
            io.sockets.emit('new message', {
                msg: '<a target="_blank" href="data:video/mp4;base64,' + content.toString('base64') + '" ' +
                    '">VIDEO LINK</a>',
                name: receiverId
            });

        }).catch(function(error) {
            // error
            console.log(error);
        });
    } else if (message_type === 'text' && (message_lineTochat.indexOf('.com') !== -1 || message_lineTochat.indexOf('.edu') !== -1 || message_lineTochat.indexOf('.net') !== -1 || message_lineTochat.indexOf('.io') !== -1 || message_lineTochat.indexOf('.org') !== -1)) {
        if (message_lineTochat.indexOf('https') !== -1 || message_lineTochat.indexOf('http') !== -1) {
            io.sockets.emit('new message', {
                msg: '<a href=' + message_lineTochat + '>' + message_lineTochat + '</a>',
                name: receiverId
            });
        } else {
            io.sockets.emit('new message', {
                msg: '<a href="https://' + message_lineTochat + '/" target="_blank">' + message_lineTochat + '</a>',
                name: receiverId
            });
        }

        usersRef.push({
            message: message_lineTochat,
            user: receiverId,
            messageTime: date.toString()
        });
    }
    else if (event.message.type === 'text' && message_lineTochat.trim() === '查詢地點DEMO') {
      let yelp = ('請選擇，你想查尋最近的地點的目標');
      io.sockets.emit('new message', {
          msg: yelp,
          name: receiverId
      });
      event.reply({
       "type": "template",
       "altText": "this is a buttons template",
       "template": {
           "type": "buttons",
           "title": yelp,
           "text": " ",
           "actions": [
               {
                 "type": "message",
                 "label": "八方雲集",
                 "text": "八方雲集"
               },{
                 "type": "message",
                 "label": "花旗銀行",
                 "text": "花旗銀行"
               }]
       }
     });
  }
  else if (event.message.type === 'text' && message_lineTochat.trim() === '八方雲集') {
    let yelp = ('感謝您使用挑餐廳的功能!\n傳送你的位置給我，便會告訴你最近的三家餐廳。');
    zxc="八方雲集";
    io.sockets.emit('new message', {
        msg: yelp,
        name: receiverId
    });
    event.reply({
        type: 'text',
        text: yelp
    },{
        type: 'text',
        text: yelp
    });
}
else if (event.message.type === 'text' && message_lineTochat.trim() === '花旗銀行') {
  let yelp = ('感謝您使用挑餐廳的功能!\n傳送你的位置給我，便會告訴你最近的三家餐廳。');
  zxc="花旗銀行";
  io.sockets.emit('new message', {
      msg: yelp,
      name: receiverId
  });
  event.reply({
      type: 'text',
      text: yelp
  },{
      type: 'text',
      text: yelp
  });
}
/*----------------------------------------------------旅遊------------------------------------------------------------*/
else if (event.message.type === 'text' && message_lineTochat.trim() === '旅遊') {
    event.reply({
     "type": "template",
     "altText": "this is a buttons template",
     "template": {
         "type": "buttons",
         "title": "查看國內外的旅遊資訊",
         "text": " ",
         "actions": [
             {
               "type": "message",
               "label": "國外旅遊",
               "text": '國外旅遊'
             },{
               "type": "message",
               "label": "國內旅遊",
               "text": "國內旅遊"
             }]
     }
   });
}
/*----------------------------------------------------國外旅遊------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '國外旅遊') {
        io.sockets.emit('new message', {
            msg: "...",
            name: receiverId,
        });
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
              type: 'carousel',
        "columns": [{
            "title": '國外旅遊資訊介紹。',
            "text": '請選擇以下行程，查詢行程費用以及相關資訊。',
            "actions": [{
              "type": "message",
                "label": '斯洛維尼亞',
                "text": "斯洛維尼亞",
            },{
              "type": "message",
                "label": '馬爾地夫',
                "text": "馬爾地夫"
            },{
              "type": "message",
                "label": '埃及',
                "text": "埃及"
            }]
        },{
            "title": '國外旅遊資訊介紹。',
            "text": '請選擇以下行程，查詢行程費用以及相關資訊。',
            "actions": [{
              "type": "message",
                "label": '杜拜',
                "text": "杜拜"
            },{
              "type": "message",
                "label": '紐西蘭',
                "text": "紐西蘭"
            },{
              "type": "message",
                "label": '蒙古',
                "text": "蒙古"
            }]
        }]
        }
      })
        usersRef.push({
            message: message_lineTochat,
            user: receiverId,
            messageTime: date.toString()
        });

    } /*else if (event.message.type === 'text' && message_lineTochat.trim() === '服務時段') {
        let service_time = '「0700~1100」 \n 「1100~1500」 \n 「1500~1900」 \n 「1900~2300」';
        io.sockets.emit('new message', {
            msg: '已發送服務時段' + "0700~1100」" + "「1100~1500」" + "「1500~1900」" + "「1900~2300」",
            name: receiverId
        });
        event.reply({
            type: 'text',
            text: service_time
        });
        usersRef.push({
            message: '已發送服務時段' + "0700~1100」" + "「1100~1500」" + "「1500~1900」" + "「1900~2300」",
            user: receiverId,
            messageTime: date.toString()
        });
      }*/
      else if (event.message.type === 'text' && message_lineTochat.trim() === '斯洛維尼亞') {
        let Slovenija = '斯洛維尼亞藍湖、克羅埃西亞十六湖公園 雙國湖景10天7夜仙境之旅';
        io.sockets.emit('new message', {
            msg: Slovenija,
            name: receiverId
        });
        event.reply({
         "type": "template",
         "altText": "this is a buttons template",
         "template": {
             "type": "buttons",
             "title": Slovenija,
             "text": " ",
             "actions": [
                 {
                   "type": "uri",
                   "label": "旅程介紹",
                   "uri": 'https://tw.taiwanviptravel.com/croatia/'
                 },{
                   "type": "uri",
                   "label": "報名",
                   "uri": "https://tw.taiwanviptravel.com/croatia/#tourlist"
                 }]
         }
       });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '馬爾地夫') {
        let Maldives = '馬爾地夫OZEN奧臻島渡假村、海底餐廳饗宴、6天4夜浪漫海島之旅';
        io.sockets.emit('new message', {
            msg: Maldives,
            name: receiverId
        });
        event.reply({
         "type": "template",
         "altText": "this is a buttons template",
         "template": {
             "type": "buttons",
             "title": Maldives,
             "text": " ",
             "actions": [
                 {
                   "type": "uri",
                   "label": "旅程介紹",
                   "uri": 'https://tw.taiwanviptravel.com/maldives-ozen/'
                 },{
                   "type": "uri",
                   "label": "報名",
                   "uri": "https://tw.taiwanviptravel.com/maldives-ozen/#tourlist"
                 }]
         }
       });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '埃及') {
        let egypt = '神秘金字塔、開羅會議百年皇宮、河輪漫遊尼羅河13天10夜埃及尋寶之旅';
        io.sockets.emit('new message', {
            msg: egypt,
            name: receiverId
        });
        event.reply({
         "type": "template",
         "altText": "this is a buttons template",
         "template": {
             "type": "buttons",
             "title": egypt,
             "text": " ",
             "actions": [
                 {
                   "type": "uri",
                   "label": "旅程介紹",
                   "uri": 'https://tw.taiwanviptravel.com/egypt/'
                 },{
                   "type": "uri",
                   "label": "報名",
                   "uri": "https://tw.taiwanviptravel.com/egypt/#tourlist"
                 }]
         }
       });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '杜拜') {
        let dubai = '遊杜拜、阿布達比 水上飛機、沙漠衝沙、住帆船飯店8天5夜鑽石黃金之旅';
        io.sockets.emit('new message', {
            msg: dubai,
            name: receiverId
        });
        event.reply({
         "type": "template",
         "altText": "this is a buttons template",
         "template": {
             "type": "buttons",
             "title": dubai,
             "text": " ",
             "actions": [
                 {
                   "type": "uri",
                   "label": "旅程介紹",
                   "uri": 'https://tw.taiwanviptravel.com/dubai3/'
                 },{
                   "type": "uri",
                   "label": "報名",
                   "uri": "https://tw.taiwanviptravel.com/dubai3/#tourlist"
                 }]
         }
       });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '紐西蘭') {
        let newzealand = '紐西蘭峽灣美景、螢火蟲洞遊船、夜遊魔戒哈比屯11天8夜南北島奇幻之旅';
        io.sockets.emit('new message', {
            msg: newzealand,
            name: receiverId
        });
        event.reply({
         "type": "template",
         "altText": "this is a buttons template",
         "template": {
             "type": "buttons",
             "title": newzealand,
             "text": " ",
             "actions": [
                 {
                   "type": "uri",
                   "label": "旅程介紹",
                   "uri": 'https://tw.taiwanviptravel.com/newzealand/'
                 },{
                   "type": "uri",
                   "label": "報名",
                   "uri": "https://tw.taiwanviptravel.com/newzealand/#tourlist"
                 }]
         }
       });
    } else if (event.message.type === 'text' && message_lineTochat.trim() === '蒙古') {
        let mongolia8d = '蒙古烏蘭巴托、巴彥戈壁、成吉思汗8天7夜游牧驚奇之旅（蒙古航空）';
        io.sockets.emit('new message', {
            msg: mongolia8d,
            name: receiverId
        });
        event.reply({
         "type": "template",
         "altText": "this is a buttons template",
         "template": {
             "type": "buttons",
             "title": mongolia8d,
             "text": " ",
             "actions": [
                 {
                   "type": "uri",
                   "label": "旅程介紹",
                   "uri": 'https://tw.taiwanviptravel.com/mongolia8d/'
                 },{
                   "type": "uri",
                   "label": "報名",
                   "uri": "https://tw.taiwanviptravel.com/mongolia8d/#tourlist"
                 }]
         }
       });
    }
    /*----------------------------------------------------公司資訊------------------------------------------------------------*/
    else if (event.message.type === 'text' && message_lineTochat.trim() === '公司資訊') {
        let company = '希羅亞旅行社股份有限公司\n地址:\n台灣台北市大安區\n復興南路一段137號7樓之7\n服務時間:\n週一～週五 09:00-18:30\n電話:02-27217300\n傳真:02-27217179\n信箱:service@taiwanday.com\n代表人:戴東華\n聯絡人:劉淑枚';
        io.sockets.emit('new message', {
            msg: company,
            name: receiverId
        });
        event.reply({
            type: 'text',
            text: company
        });
    }
    else if (event.message.type === 'text' && message_lineTochat.trim() === '國內旅遊') {
        io.sockets.emit('new message', {
            msg: "...",
            name: receiverId,
        });
        event.reply({
            "type": "template",
            "altText": "Welcome Template",
            "template": {
              type: 'carousel',
        "columns": [{
            "title": '國內旅遊資訊介紹。',
            "text": '請選擇以下行程，查詢行程費用以及相關資訊。',
            "actions": [{
              "type": "message",
                "label": '台南、奇美博物館',
                "text": "台南、奇美博物館",
            },{
              "type": "message",
                "label": '溪頭、杉林溪、米堤飯店',
                "text": "溪頭、杉林溪、米堤飯店"
            },{
              "type": "message",
                "label": '花東桂田喜來登',
                "text": "花東桂田喜來登"
            }]
        }]
        }
      })
    }
    else if (event.message.type === 'text' && message_lineTochat.trim() === '台南、奇美博物館') {
        let tainan = '台南、奇美博物館商務豪華驚奇之旅2天1夜';
        io.sockets.emit('new message', {
            msg: tainan,
            name: receiverId
        });
        event.reply({
         "type": "template",
         "altText": "this is a buttons template",
         "template": {
             "type": "buttons",
             "title": tainan,
             "text": " ",
             "actions": [
                 {
                   "type": "uri",
                   "label": "旅程介紹",
                   "uri": 'https://tw.taiwanviptravel.com/tainan/'
                 },{
                   "type": "uri",
                   "label": "報名",
                   "uri": "https://tw.taiwanviptravel.com/tainan/#tourlist"
                 }]
         }
       });
    }
    else if (event.message.type === 'text' && message_lineTochat.trim() === '溪頭、杉林溪、米堤飯店') {
        let nantou = '溪頭、杉林溪、米堤飯店商務豪華之旅2天1夜';
        io.sockets.emit('new message', {
            msg: nantou,
            name: receiverId
        });
        event.reply({
         "type": "template",
         "altText": "this is a buttons template",
         "template": {
             "type": "buttons",
             "title": nantou,
             "text": " ",
             "actions": [
                 {
                   "type": "uri",
                   "label": "旅程介紹",
                   "uri": 'https://tw.taiwanviptravel.com/nantou/'
                 },{
                   "type": "uri",
                   "label": "報名",
                   "uri": "https://tw.taiwanviptravel.com/nantou/#tourlist"
                 }]
         }
       });
    }
    else if (event.message.type === 'text' && message_lineTochat.trim() === '花東桂田喜來登') {
        let hualientaitung = '花東桂田喜來登尊爵之旅3天2夜';
        io.sockets.emit('new message', {
            msg: hualientaitung,
            name: receiverId
        });
        event.reply({
         "type": "template",
         "altText": "this is a buttons template",
         "template": {
             "type": "buttons",
             "title": hualientaitung,
             "text": " ",
             "actions": [
                 {
                   "type": "uri",
                   "label": "旅程介紹",
                   "uri": 'https://tw.taiwanviptravel.com/hualien-taitung/#train'
                 },{
                   "type": "uri",
                   "label": "報名",
                   "uri": "https://tw.taiwanviptravel.com/hualien-taitung/#tourlist"
                 }]
         }
       });
    }
    /*----------------------------------------------------主選單------------------------------------------------------------*/
    //Other Demo
    else if(event.message.type === 'text' && message_lineTochat.trim() === 'Demo') {
                 io.sockets.emit('new message', {
                     msg: '...',
                     name: receiverId,
                 });
                 event.reply({
                  "type": "template",
                  "altText": "this is a buttons template",
                  "template": {
                      "type": "buttons",
                      "title": "其他功能介紹",
                      "text": "八方雲集/花旗銀行位置查詢\n嘿鬥餐廳菜單及訂位\n",
                      "actions": [
                          {
                            "type": "message",
                            "label": "查詢地點DEMO",
                            "text": '查詢地點DEMO'
                          },{
                            "type": "message",
                            "label": "餐廳訂位",
                            "text": "菜單功能"
                          },{
                            "type": "message",
                            "label": "衣服購物",
                            "text": "購物車功能"
                          }]
                  }
                });
             }
    //Tiniline主選單
    else if(event.message.type === 'text' && message_lineTochat.trim() === 'Tini小精靈') {
                 io.sockets.emit('new message', {
                     msg: '已接收顯示Tini'+ "問題分類"+ "購買方案"+ "公司資訊" + "菜單功能"+ "購物車功能"+ "問卷功能",
                     name: receiverId,
                 });
                 event.reply({
                     "type": "template",
                     "altText": "Welcome Template",
                     "template": {
                       type: 'carousel',
                 "columns": [{
                     "thumbnailImageUrl": 'https://7-t.imgbox.com/GEduM2tI.jpg',
                     "title": '請選擇以下服務。',
                     "text": '由Tini小精靈幫您快速排解問題!',
                     "actions": [{
                       "type": "message",
                         "label": '問題分類',
                         "text": "問題分類"
                     },{
                       "type": "message",
                         "label": '購買方案',
                         "text": "購買方案"
                     },{
                       "type": "message",
                         "label": '公司資訊',
                         "text": "公司資訊"
                     }]
                 },{
                     "thumbnailImageUrl": 'https://6-t.imgbox.com/4gj9qJm7.jpg',
                     "title": '功能示範DEMO系列',
                     "text": '菜單/購物車/問卷 功能',
                     "actions": [{
                       "type": "message",
                         "label": '菜單功能',
                         "text": "菜單功能"
                     },{
                       "type": "message",
                         "label": '購物車功能',
                         "text": "購物車功能"
                     },{
                       "type": "message",
                         "label": '問卷功能',
                         "text": "問卷功能"
                     }]
                 },{
                     "thumbnailImageUrl": 'https://s3-media4.fl.yelpcdn.com/bphoto/k4lpLYvXyUrscEowoiO9hg/o.jpg',
                     "title": '功能示範DEMO系列',
                     "text": '餐廳搜尋 功能',
                     "actions": [{
                       "type": "message",
                         "label": '查詢地點DEMO',
                         "text": "查詢地點DEMO"
                     },{
                       "type": "message",
                         "label": '預約DEMO',
                         "text": "預約DEMO"
                     },{
                       "type": "message",
                         "label": '回饋問卷',
                         "text": "回饋問卷"
                     }]
                 }]
                 }
               })
             }
             //圖片樣板模組 (圖片出不來)
             else if(event.message.type === 'text' && message_lineTochat.trim() === 'Imagemap') {
               console.log("OKOK!")
               event.reply({
    type: 'imagemap',
    baseUrl: 'https://3-t.imgbox.com/xnGyM2RT.jpg/300',
    altText: 'this is an imagemap',
    baseSize: { height: 300, width: 300 },
    actions: [{
        type: 'uri',
        linkUri: 'https://lancechieh.github.io/tw.html',
        area: { x: 0, y: 0, width: 150, height: 300 }
    }, {
        type: 'message',
        text: 'hello',
        area: { x: 150, y: 0, width: 150, height: 300 }
    }]
});
             }
             //圖片樣板模組 (圖片出不來)
/*---------------------------------------------董事長菜單------------------------------------------------------------*/
             else if(event.message.type === 'text' && message_lineTochat.trim() === '董事長遊台灣菜單') {
                          io.sockets.emit('new message', {
                              msg: '..',
                              name: receiverId,
                          });
                          event.reply({
                              "type": "template",
                              "altText": "Welcome Template",
                              "template": {
                                type: 'carousel',
                          "columns": [{
                              "thumbnailImageUrl": 'https://7-t.imgbox.com/zLJGgNrj.jpg',
                              "title": '董事長遊台灣',
                              "text": '常見問題/旅遊菜單/回饋問卷',
                              "actions": [{
                                "type": "message",
                                  "label": '常見問題',
                                  "text": "常見問題"
                              },{
                                "type": "message",
                                  "label": '旅遊菜單',
                                  "text": "旅遊"
                              },{
                                "type": "message",
                                  "label": '回饋問卷',
                                  "text": "回饋問卷"
                              }]
                          },{
                              "thumbnailImageUrl": 'https://8-t.imgbox.com/cEoYf9AJ.jpg',
                              "title": '董事長遊台灣',
                              "text": '旅遊預約/公司資訊',
                              "actions": [{
                                "type": "message",
                                  "label": '旅遊預約',
                                  "text": "旅遊預約"
                              },{
                                "type": "message",
                                  "label": '公司資訊',
                                  "text": "公司資訊"
                              },{
                                "type": "message",
                                  "label": '-',
                                  "text": " "
                              }]
                          }]
                          }
                        })
                      }

              //↓董事長遊台灣
              else if(event.message.type === 'text' && message_lineTochat.trim() === '回饋問卷') {
                event.reply({
                        "type": "template",
                        "altText": "行程相關問題/服務滿意度調查",
                        "template": {
                            "type": "confirm",
                            "text": "麻煩您，撥冗填答案本問卷，提供您的寶貴意見，做為日後本公司旅遊整體規劃與服務改善的重要參考。",
                            "actions": [
                                {
                                  "type": "message",
                                  "label": "行程相關問題",
                                  "text": "行程相關問題"
                                },
                                {
                                  "type": "message",
                                  "label": "滿意度",
                                  "text": "滿意度"
                                }
                            ]
                        }
                      })
              }
              //mysql 滿意度調查
              else if(event.message.type === 'text' && message_lineTochat.trim() === '滿意度') {
                // console.log('1236');
                // if(select_4()){
                //   console.log('8746');
                  voter = receiverId;
                  time = d;
                  categoryName =  '秘書';
                  workerName = '楊靜嫻';
                  groupName = '台北TPE';
                  console.log(voter);
                  console.log(time);
                  console.log(categoryName);
                  console.log(workerName);
                  console.log(groupName);
                  event.reply({
                      "type": "template",
                      "altText": "Welcome Template",
                      "template": {
                        type: 'carousel',
                  "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                          "label": '非常滿意',
                          "text": "S1-5"
                      },{
                        "type": "message",
                          "label": '滿意',
                          "text": "S1-4"
                      },{
                        "type": "message",
                          "label": '普通',
                          "text": "S1-3"
                      }]
                  },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                          "label": '不滿意',
                          "text": "S1-2"
                      },{
                        "type": "message",
                          "label": '非常不滿意',
                          "text": "S1-1"
                      },{
                        "type": "message",
                          "label": '-',
                          "text": "-"
                      }]
                  }]
                  }
                });
              // }

            }
            else if(event.message.text.indexOf('S1-') !== -1) {
              console.log(event.message.text);
              if(event.message.text=="S1-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
              else if(event.message.text=="S1-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
              else if(event.message.text=="S1-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
              else if(event.message.text=="S1-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
              else if(event.message.text=="S1-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
              time = d;
              categoryName =  '司機';
              workerName = '百俊';
                  console.log(voter);
                  console.log(time);
                  console.log(categoryName);
                  console.log(workerName);
                  console.log(groupName);
                  event.reply({
                      "type": "template",
                      "altText": "Welcome Template",
                      "template": {
                        type: 'carousel',
                  "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                          "label": '非常滿意',
                          "text": "S3-5"
                      },{
                        "type": "message",
                          "label": '滿意',
                          "text": "S2-4"
                      },{
                        "type": "message",
                          "label": '普通',
                          "text": "S2-3"
                      }]
                  },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                          "label": '不滿意',
                          "text": "S2-2"
                      },{
                        "type": "message",
                          "label": '非常不滿意',
                          "text": "S2-1"
                      },{
                        "type": "message",
                          "label": '-',
                          "text": "-"
                      }]
                  }]
                  }
                })
              }
              else if(event.message.text.indexOf('S2-') !== -1) {
                console.log(event.message.text);
                if(event.message.text=="S2-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S2-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S2-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S2-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S2-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                time = d;
                categoryName =  '攝影師';
                workerName = '劉育昇';
                console.log(voter);
                console.log(time);
                console.log(categoryName);
                console.log(workerName);
                console.log(groupName);
                event.reply({
                  "type": "template",
                  "altText": "Welcome Template",
                  "template": {
                    type: 'carousel',
                    "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S3-5"
                      },{
                        "type": "message",
                        "label": '滿意',
                        "text": "S3-4"
                      },{
                        "type": "message",
                        "label": '普通',
                        "text": "S3-3"
                      }]
                    },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S3-2"
                      },{
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S3-1"
                      },{
                        "type": "message",
                        "label": '-',
                        "text": "-"
                      }]
                    }]
                  }
                })
              }
              else if(event.message.text.indexOf('S3-') !== -1) {
                console.log(event.message.text);
                if(event.message.text=="S3-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S3-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S3-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S3-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S2-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                time = d;
                categoryName =  '客服';
                workerName = '客服人員';
                console.log(voter);
                console.log(time);
                console.log(categoryName);
                console.log(workerName);
                console.log(groupName);
                event.reply({
                  "type": "template",
                  "altText": "Welcome Template",
                  "template": {
                    type: 'carousel',
                    "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S4-5"
                      },{
                        "type": "message",
                        "label": '滿意',
                        "text": "S4-4"
                      },{
                        "type": "message",
                        "label": '普通',
                        "text": "S4-3"
                      }]
                    },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S4-2"
                      },{
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S4-1"
                      },{
                        "type": "message",
                        "label": '-',
                        "text": "-"
                      }]
                    }]
                  }
                })
              }
              else if(event.message.text.indexOf('S4-') !== -1) {
                console.log(event.message.text);
                if(event.message.text=="S4-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S4-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S4-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S4-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S4-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                time = d;
                categoryName =  '導遊';
                workerName = '魏清水';
                console.log(voter);
                console.log(time);
                console.log(categoryName);
                console.log(workerName);
                console.log(groupName);
                event.reply({
                  "type": "template",
                  "altText": "Welcome Template",
                  "template": {
                    type: 'carousel',
                    "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S5-5"
                      },{
                        "type": "message",
                        "label": '滿意',
                        "text": "S5-4"
                      },{
                        "type": "message",
                        "label": '普通',
                        "text": "S5-3"
                      }]
                    },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S5-2"
                      },{
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S5-1"
                      },{
                        "type": "message",
                        "label": '-',
                        "text": "-"
                      }]
                    }]
                  }
                })
              }
              else if(event.message.text.indexOf('S5-') !== -1) {
                console.log(event.message.text);
                if(event.message.text=="S5-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S5-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S5-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S5-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S5-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                time = d;
                categoryName =  '導遊';
                workerName = '陳仕賢';
                console.log(voter);
                console.log(time);
                console.log(categoryName);
                console.log(workerName);
                console.log(groupName);
                event.reply({
                  "type": "template",
                  "altText": "Welcome Template",
                  "template": {
                    type: 'carousel',
                    "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S6-5"
                      },{
                        "type": "message",
                        "label": '滿意',
                        "text": "S6-4"
                      },{
                        "type": "message",
                        "label": '普通',
                        "text": "S6-3"
                      }]
                    },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S6-2"
                      },{
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S6-1"
                      },{
                        "type": "message",
                        "label": '-',
                        "text": "-"
                      }]
                    }]
                  }
                })
              }
              else if(event.message.text.indexOf('S6-') !== -1) {
                console.log(event.message.text);
                if(event.message.text=="S6-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S6-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S6-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S6-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S6-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                time = d;
                categoryName =  '餐廳';
                workerName = '魔菇部落';
                console.log(voter);
                console.log(time);
                console.log(categoryName);
                console.log(workerName);
                console.log(groupName);
                event.reply({
                  "type": "template",
                  "altText": "Welcome Template",
                  "template": {
                    type: 'carousel',
                    "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S7-5"
                      },{
                        "type": "message",
                        "label": '滿意',
                        "text": "S7-4"
                      },{
                        "type": "message",
                        "label": '普通',
                        "text": "S7-3"
                      }]
                    },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S7-2"
                      },{
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S7-1"
                      },{
                        "type": "message",
                        "label": '-',
                        "text": "-"
                      }]
                    }]
                  }
                })
              }
              else if(event.message.text.indexOf('S7-') !== -1) {
                console.log(event.message.text);
                if(event.message.text=="S7-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S7-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S7-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S7-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S7-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                time = d;
                categoryName =  '餐廳';
                workerName = '黑公雞風味餐廳';
                console.log(voter);
                console.log(time);
                console.log(categoryName);
                console.log(workerName);
                console.log(groupName);
                event.reply({
                  "type": "template",
                  "altText": "Welcome Template",
                  "template": {
                    type: 'carousel',
                    "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S8-5"
                      },{
                        "type": "message",
                        "label": '滿意',
                        "text": "S8-4"
                      },{
                        "type": "message",
                        "label": '普通',
                        "text": "S8-3"
                      }]
                    },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S8-2"
                      },{
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S8-1"
                      },{
                        "type": "message",
                        "label": '-',
                        "text": "-"
                      }]
                    }]
                  }
                })
              }
              else if(event.message.text.indexOf('S8-') !== -1) {
                console.log(event.message.text);
                if(event.message.text=="S8-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S8-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S8-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S8-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S8-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                time = d;
                categoryName =  '餐廳';
                workerName = '宏銘的廚房';
                console.log(voter);
                console.log(time);
                console.log(categoryName);
                console.log(workerName);
                console.log(groupName);
                event.reply({
                  "type": "template",
                  "altText": "Welcome Template",
                  "template": {
                    type: 'carousel',
                    "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S9-5"
                      },{
                        "type": "message",
                        "label": '滿意',
                        "text": "S9-4"
                      },{
                        "type": "message",
                        "label": '普通',
                        "text": "S9-3"
                      }]
                    },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S9-2"
                      },{
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S9-1"
                      },{
                        "type": "message",
                        "label": '-',
                        "text": "-"
                      }]
                    }]
                  }
                })
              }
              else if(event.message.text.indexOf('S9-') !== -1) {
                console.log(event.message.text);
                if(event.message.text=="S9-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S9-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S9-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S9-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S9-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                time = d;
                categoryName =  '餐廳';
                workerName = '喆娟夢田';
                console.log(voter);
                console.log(time);
                console.log(categoryName);
                console.log(workerName);
                console.log(groupName);
                event.reply({
                  "type": "template",
                  "altText": "Welcome Template",
                  "template": {
                    type: 'carousel',
                    "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S10-5"
                      },{
                        "type": "message",
                        "label": '滿意',
                        "text": "S10-4"
                      },{
                        "type": "message",
                        "label": '普通',
                        "text": "S10-3"
                      }]
                    },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S10-2"
                      },{
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S10-1"
                      },{
                        "type": "message",
                        "label": '-',
                        "text": "-"
                      }]
                    }]
                  }
                })
              }
              else if(event.message.text.indexOf('S10-') !== -1) {
                console.log(event.message.text);
                if(event.message.text=="S10-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S10-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S10-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S10-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S10-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                time = d;
                categoryName =  '伴手禮';
                workerName = '卦山燒';
                console.log(voter);
                console.log(time);
                console.log(categoryName);
                console.log(workerName);
                console.log(groupName);
                event.reply({
                  "type": "template",
                  "altText": "Welcome Template",
                  "template": {
                    type: 'carousel',
                    "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S11-5"
                      },{
                        "type": "message",
                        "label": '滿意',
                        "text": "S11-4"
                      },{
                        "type": "message",
                        "label": '普通',
                        "text": "S11-3"
                      }]
                    },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S11-2"
                      },{
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S11-1"
                      },{
                        "type": "message",
                        "label": '-',
                        "text": "-"
                      }]
                    }]
                  }
                })
              }
              else if(event.message.text.indexOf('S11-') !== -1) {
                console.log(event.message.text);
                if(event.message.text=="S11-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S11-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S11-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S11-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S11-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                time = d;
                categoryName =  '飯店';
                workerName = '彰化福泰飯店';
                console.log(voter);
                console.log(time);
                console.log(categoryName);
                console.log(workerName);
                console.log(groupName);
                event.reply({
                  "type": "template",
                  "altText": "Welcome Template",
                  "template": {
                    type: 'carousel',
                    "columns": [{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '非常滿意',
                        "text": "S12-5"
                      },{
                        "type": "message",
                        "label": '滿意',
                        "text": "S12-4"
                      },{
                        "type": "message",
                        "label": '普通',
                        "text": "S12-3"
                      }]
                    },{
                      "title": groupName,
                      "text": categoryName+':'+workerName,
                      "actions": [{
                        "type": "message",
                        "label": '不滿意',
                        "text": "S12-2"
                      },{
                        "type": "message",
                        "label": '非常不滿意',
                        "text": "S12-1"
                      },{
                        "type": "message",
                        "label": '-',
                        "text": "-"
                      }]
                    }]
                  }
                })
              }
              else if(event.message.text.indexOf('S12-') !== -1) {
                console.log(event.message.text);
                if(event.message.text=="S12-1"){score=1;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S12-2"){score=2;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S12-3"){score=3;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S12-4"){score=4;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                else if(event.message.text=="S12-5"){score=5;console.log(score);vote(voter, new Date(time), categoryName, workerName, groupName, score);}
                console.log(voter);
                console.log(time);
                console.log(categoryName);
                console.log(workerName);
                console.log(groupName);
              }
                //mysql 滿意度調查
                //firebase DB行程相關問題
              else if(event.message.type === 'text' && message_lineTochat.trim() === '行程相關問題') {
                           event.reply({
                               "type": "template",
                               "altText": "Welcome Template",
                               "template": {
                                 type: 'carousel',
                           "columns": [{
                               "title": '你如何得知此次旅遊行程',
                               "text": '--------------------------------------------------',
                               "actions": [{
                                 "type": "message",
                                   "label": '網站',
                                   "text": "P1-網站"
                               },{
                                 "type": "message",
                                   "label": 'FB',
                                   "text": "P1-FB"
                               },{
                                 "type": "message",
                                   "label": '親友介紹',
                                   "text": "P1-親友介紹"
                               }]
                           },{
                               "title": '你如何得知此次旅遊行程',
                               "text": '--------------------------------------------------',
                               "actions": [{
                                 "type": "message",
                                   "label": '從雙月刊',
                                   "text": "P1-從雙月刊"
                               },{
                                 "type": "message",
                                   "label": '員旅',
                                   "text": "P1-員旅"
                               },{
                                 "type": "message",
                                   "label": '其他',
                                   "text": "P1-其他"
                               }]
                           }]
                           }
                         })
                       }
                         else if (event.message.text.indexOf('P1-') !== -1) {
                           var ANS = event.message.text;
                           for (let i in chatData) {
                             if (chatData[i].Profile.userId == receiverId){
                            newDBRef.child(i).child("Profile").update({"從哪個管道得知":ANS});
                             break;
                            }
                           }
                                    event.reply({
                                        "type": "template",
                                        "altText": "Welcome Template",
                                        "template": {
                                          type: 'carousel',
                                    "columns": [{
                                        "title": '您第幾次參加本公司行程',
                                        "text": '--------------------------------------------------',
                                        "actions": [{
                                          "type": "message",
                                            "label": '第一次',
                                            "text": "P2-第一次"
                                        },{
                                          "type": "message",
                                            "label": '第二次',
                                            "text": "P2-第二次"
                                        },{
                                          "type": "message",
                                            "label": '第三次',
                                            "text": "P2-第三次"
                                        }]
                                    },{
                                        "title": '您第幾次參加本公司行程',
                                        "text": '--------------------------------------------------',
                                        "actions": [{
                                          "type": "message",
                                            "label": '第四次',
                                            "text": "P2-第四次"
                                        },{
                                          "type": "message",
                                            "label": '五次以上',
                                            "text": "P2-五次以上"
                                        },{
                                          "type": "message",
                                            "label": '-',
                                            "text": "-"
                                        }]
                                    }]
                                    }
                                  })
                                }
                                else if (event.message.text.indexOf('P2-') !== -1) {
                                  var ANS = event.message.text;
                                  for (let i in chatData) {
                                    if (chatData[i].Profile.userId == receiverId){
                                   newDBRef.child(i).child("Profile").update({"參加本公司的次數":ANS});
                                    break;
                                   }
                                  }
                                           event.reply({
                                               "type": "template",
                                               "altText": "Welcome Template",
                                               "template": {
                                                 type: 'carousel',
                                           "columns": [{
                                               "title": '您再次參加本公司行程原因',
                                               "text": '--------------------------------------------------',
                                               "actions": [{
                                                 "type": "message",
                                                   "label": '服務品質好',
                                                   "text": "P3-服務品質好"
                                               },{
                                                 "type": "message",
                                                   "label": '行程地點優',
                                                   "text": "P3-行程地點優"
                                               },{
                                                 "type": "message",
                                                   "label": '其他',
                                                   "text": "P3-其他"
                                               }]
                                           }]
                                           }
                                         })
                                       }
                                       else if (event.message.text.indexOf('P3-') !== -1) {
                                         var ANS = event.message.text;
                                         for (let i in chatData) {
                                           if (chatData[i].Profile.userId == receiverId){
                                          newDBRef.child(i).child("Profile").update({"參加本公司旅遊的原因":ANS});
                                           break;
                                          }
                                         }
                                                  event.reply({
                                                      "type": "template",
                                                      "altText": "Welcome Template",
                                                      "template": {
                                                        type: 'carousel',
                                                  "columns": [{
                                                      "title": '您此次旅遊行程幾人同行',
                                                      "text": '--------------------------------------------------',
                                                      "actions": [{
                                                        "type": "message",
                                                          "label": '1人',
                                                          "text": "P4-1人"
                                                      },{
                                                        "type": "message",
                                                          "label": '2人',
                                                          "text": "P4-2人"
                                                      },{
                                                        "type": "message",
                                                          "label": '3人',
                                                          "text": "P4-3人"
                                                      }]
                                                  },{
                                                      "title": '您此次旅遊行程幾人同行',
                                                      "text": '--------------------------------------------------',
                                                      "actions": [{
                                                        "type": "message",
                                                          "label": '4人',
                                                          "text": "P4-4人"
                                                      },{
                                                        "type": "message",
                                                          "label": '5人以上',
                                                          "text": "P4-5人以上"
                                                      },{
                                                        "type": "message",
                                                          "label": '-',
                                                          "text": "-"
                                                      }]
                                                  }]
                                                  }
                                                })
                                              }
                                              else if (event.message.text.indexOf('P4-') !== -1) {
                                                console.log(receiverId);
                                                var ANS = event.message.text;
                                                for (let i in chatData) {
                                                  if (chatData[i].Profile.userId == receiverId){
                                                 newDBRef.child(i).child("Profile").update({"此次旅遊幾人同行":ANS});
                                                  break;
                                                 }
                                                }
                                                     }
                                                     //firebase DB行程相關問題
//↓此段現在沒有用處，(本來是用來寫進firebase DB)，之後為了改寫到mysql，所以可以不理會此段。
              else if(event.message.type === 'text' && message_lineTochat.trim() === '服務滿意度調查' || event.message.text.indexOf('Z4-') !== -1 ) {
                           event.reply({
                               "type": "template",
                               "altText": "Welcome Template",
                               "template": {
                                 type: 'carousel',
                           "columns": [{
                               "title": '服務滿意度調查',
                               "text": '秘書:楊靜嫻',
                               "actions": [{
                                 "type": "message",
                                   "label": '非常滿意',
                                   "text": "Q1-非常滿意"
                               },{
                                 "type": "message",
                                   "label": '滿意',
                                   "text": "Q1-滿意"
                               },{
                                 "type": "message",
                                   "label": '普通',
                                   "text": "Q1-普通"
                               }]
                           },{
                               "title": '服務滿意度調查',
                               "text": '秘書:楊靜嫻',
                               "actions": [{
                                 "type": "message",
                                   "label": '不滿意',
                                   "text": "Q1-不滿意"
                               },{
                                 "type": "message",
                                   "label": '非常不滿意',
                                   "text": "非常不滿意-Q1"
                               },{
                                 "type": "message",
                                   "label": '查看其他問題',
                                   "text": "Tini小精靈"
                               }]
                           }]
                           }
                         })
                       }
          else if (event.message.text.indexOf('Q1-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"秘書:楊靜嫻":ANS});
              break;
             }
            }
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
                "title": '服務滿意度調查',
                "text": '司機:百駿',
                "actions": [{
                  "type": "message",
                    "label": '非常滿意',
                    "text": "Q2-非常滿意"
                },{
                  "type": "message",
                    "label": '滿意',
                    "text": "Q2-滿意"
                },{
                  "type": "message",
                    "label": '普通',
                    "text": "Q2-普通"
                }]
            },{
                "title": '服務滿意度調查',
                "text": '司機:百駿',
                "actions": [{
                  "type": "message",
                    "label": '不滿意',
                    "text": "Q2-不滿意"
                },{
                  "type": "message",
                    "label": '非常不滿意',
                    "text": "Q2-非常不滿意"
                },{
                  "type": "message",
                    "label": '查看其他問題',
                    "text": "Tini小精靈"
                }]
            }]
            }
          })
          }
          else if (event.message.text.indexOf('Q2-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"司機:百駿":ANS});
              break;
             }
            }
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
                "title": '服務滿意度調查',
                "text": '攝影師：劉育昇',
                "actions": [{
                  "type": "message",
                    "label": '非常滿意',
                    "text": "Q3-非常滿意"
                },{
                  "type": "message",
                    "label": '滿意',
                    "text": "Q3-滿意"
                },{
                  "type": "message",
                    "label": '普通',
                    "text": "Q3-普通"
                }]
            },{
                "title": '服務滿意度調查',
                "text": '攝影師：劉育昇',
                "actions": [{
                  "type": "message",
                    "label": '不滿意',
                    "text": "Q3-不滿意"
                },{
                  "type": "message",
                    "label": '非常不滿意',
                    "text": "Q3-非常不滿意"
                },{
                  "type": "message",
                    "label": '查看其他問題',
                    "text": "Tini小精靈"
                }]
            }]
            }
          })
          }
          else if (event.message.text.indexOf('Q3-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"攝影師：劉育昇":ANS});
              break;
             }
            }
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
                "title": '服務滿意度調查',
                "text": '客服人員',
                "actions": [{
                  "type": "message",
                    "label": '非常滿意',
                    "text": "Q4-非常滿意"
                },{
                  "type": "message",
                    "label": '滿意',
                    "text": "Q4-滿意"
                },{
                  "type": "message",
                    "label": '普通',
                    "text": "Q4-普通"
                }]
            },{
                "title": '服務滿意度調查',
                "text": '客服人員',
                "actions": [{
                  "type": "message",
                    "label": '不滿意',
                    "text": "Q4-不滿意"
                },{
                  "type": "message",
                    "label": '非常不滿意',
                    "text": "Q4-非常不滿意"
                },{
                  "type": "message",
                    "label": '查看其他問題',
                    "text": "Tini小精靈"
                }]
            }]
            }
          })
          }
          else if (event.message.text.indexOf('Q4-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"客服人員":ANS});
              break;
             }
            }
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
                "title": '服務滿意度調查',
                "text": '導覽老師：魏清水',
                "actions": [{
                  "type": "message",
                    "label": '非常滿意',
                    "text": "Q5-非常滿意"
                },{
                  "type": "message",
                    "label": '滿意',
                    "text": "Q5-滿意"
                },{
                  "type": "message",
                    "label": '普通',
                    "text": "Q5-普通"
                }]
            },{
                "title": '服務滿意度調查',
                "text": '導覽老師：魏清水',
                "actions": [{
                  "type": "message",
                    "label": '不滿意',
                    "text": "Q5-不滿意"
                },{
                  "type": "message",
                    "label": '非常不滿意',
                    "text": "Q5-非常不滿意"
                },{
                  "type": "message",
                    "label": '查看其他問題',
                    "text": "Tini小精靈"
                }]
            }]
            }
          })
          }
          else if (event.message.text.indexOf('Q5-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"導覽老師：魏清水":ANS});
              break;
             }
            }
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
                "title": '服務滿意度調查',
                "text": '導覽老師：陳仕賢',
                "actions": [{
                  "type": "message",
                    "label": '非常滿意',
                    "text": "Q6-非常滿意"
                },{
                  "type": "message",
                    "label": '滿意',
                    "text": "Q6-滿意"
                },{
                  "type": "message",
                    "label": '普通',
                    "text": "Q6-普通"
                }]
            },{
                "title": '服務滿意度調查',
                "text": '導覽老師：陳仕賢',
                "actions": [{
                  "type": "message",
                    "label": '不滿意',
                    "text": "Q6-不滿意"
                },{
                  "type": "message",
                    "label": '非常不滿意',
                    "text": "Q6-非常不滿意"
                },{
                  "type": "message",
                    "label": '查看其他問題',
                    "text": "Tini小精靈"
                }]
            }]
            }
          })
          }
          else if (event.message.text.indexOf('Q6-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"導覽老師：陳仕賢":ANS});
              break;
             }
            }
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
                "title": '服務滿意度調查',
                "text": '餐廳：蘑菇部落',
                "actions": [{
                  "type": "message",
                    "label": '非常滿意',
                    "text": "Q7-非常滿意"
                },{
                  "type": "message",
                    "label": '滿意',
                    "text": "Q7-滿意"
                },{
                  "type": "message",
                    "label": '普通',
                    "text": "Q7-普通"
                }]
            },{
                "title": '服務滿意度調查',
                "text": '餐廳：蘑菇部落',
                "actions": [{
                  "type": "message",
                    "label": '不滿意',
                    "text": "Q7-不滿意"
                },{
                  "type": "message",
                    "label": '非常不滿意',
                    "text": "Q7-非常不滿意"
                },{
                  "type": "message",
                    "label": '查看其他問題',
                    "text": "Tini小精靈"
                }]
            }]
            }
          })
          }
          else if (event.message.text.indexOf('Q7-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"餐廳：蘑菇部落":ANS});
              break;
             }
            }
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
                "title": '服務滿意度調查',
                "text": '餐廳：黑公雞風味餐廳',
                "actions": [{
                  "type": "message",
                    "label": '非常滿意',
                    "text": "Q8-非常滿意"
                },{
                  "type": "message",
                    "label": '滿意',
                    "text": "Q8-滿意"
                },{
                  "type": "message",
                    "label": '普通',
                    "text": "Q8-普通"
                }]
            },{
                "title": '服務滿意度調查',
                "text": '餐廳：黑公雞風味餐廳',
                "actions": [{
                  "type": "message",
                    "label": '不滿意',
                    "text": "Q8-不滿意"
                },{
                  "type": "message",
                    "label": '非常不滿意',
                    "text": "Q8-非常不滿意"
                },{
                  "type": "message",
                    "label": '查看其他問題',
                    "text": "Tini小精靈"
                }]
            }]
            }
          })
          }
          else if (event.message.text.indexOf('Q8-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"餐廳：黑公雞風味餐廳":ANS});
              break;
             }
            }
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
                "title": '服務滿意度調查',
                "text": '餐廳：宏銘的廚房',
                "actions": [{
                  "type": "message",
                    "label": '非常滿意',
                    "text": "Q9-非常滿意"
                },{
                  "type": "message",
                    "label": '滿意',
                    "text": "Q9-滿意"
                },{
                  "type": "message",
                    "label": '普通',
                    "text": "Q9-普通"
                }]
            },{
                "title": '服務滿意度調查',
                "text": '餐廳：宏銘的廚房',
                "actions": [{
                  "type": "message",
                    "label": '不滿意',
                    "text": "Q9-不滿意"
                },{
                  "type": "message",
                    "label": '非常不滿意',
                    "text": "Q9-非常不滿意"
                },{
                  "type": "message",
                    "label": '查看其他問題',
                    "text": "Tini小精靈"
                }]
            }]
            }
          })
          }
          else if (event.message.text.indexOf('Q9-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"餐廳：宏銘的廚房":ANS});
              break;
             }
            }
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
                "title": '服務滿意度調查',
                "text": '餐廳：喆娟夢田',
                "actions": [{
                  "type": "message",
                    "label": '非常滿意',
                    "text": "Q10-非常滿意"
                },{
                  "type": "message",
                    "label": '滿意',
                    "text": "Q10-滿意"
                },{
                  "type": "message",
                    "label": '普通',
                    "text": "Q10-普通"
                }]
            },{
                "title": '服務滿意度調查',
                "text": '餐廳：喆娟夢田',
                "actions": [{
                  "type": "message",
                    "label": '不滿意',
                    "text": "Q10-不滿意"
                },{
                  "type": "message",
                    "label": '非常不滿意',
                    "text": "Q10-非常不滿意"
                },{
                  "type": "message",
                    "label": '查看其他問題',
                    "text": "Tini小精靈"
                }]
            }]
            }
          })
          }
          else if (event.message.text.indexOf('Q10-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"餐廳：喆娟夢田":ANS});
              break;
             }
            }
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
                "title": '服務滿意度調查',
                "text": '伴手禮',
                "actions": [{
                  "type": "message",
                    "label": '非常滿意',
                    "text": "Q11-非常滿意"
                },{
                  "type": "message",
                    "label": '滿意',
                    "text": "Q11-滿意"
                },{
                  "type": "message",
                    "label": '普通',
                    "text": "Q11-普通"
                }]
            },{
                "title": '服務滿意度調查',
                "text": '伴手禮',
                "actions": [{
                  "type": "message",
                    "label": '不滿意',
                    "text": "Q11-不滿意"
                },{
                  "type": "message",
                    "label": '非常不滿意',
                    "text": "Q11-非常不滿意"
                },{
                  "type": "message",
                    "label": '查看其他問題',
                    "text": "Tini小精靈"
                }]
            }]
            }
          })
          }
          else if (event.message.text.indexOf('Q11-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"伴手禮":ANS});
              break;
             }
            }
            event.reply({
                "type": "template",
                "altText": "Welcome Template",
                "template": {
                  type: 'carousel',
            "columns": [{
                "title": '服務滿意度調查',
                "text": '住宿：彰化福泰飯店',
                "actions": [{
                  "type": "message",
                    "label": '非常滿意',
                    "text": "Q12-非常滿意"
                },{
                  "type": "message",
                    "label": '滿意',
                    "text": "Q12-滿意"
                },{
                  "type": "message",
                    "label": '普通',
                    "text": "Q12-普通"
                }]
            },{
                "title": '服務滿意度調查',
                "text": '住宿：彰化福泰飯店',
                "actions": [{
                  "type": "message",
                    "label": '不滿意',
                    "text": "Q12-不滿意"
                },{
                  "type": "message",
                    "label": '非常不滿意',
                    "text": "Q12-非常不滿意"
                },{
                  "type": "message",
                    "label": '查看其他問題',
                    "text": "Tini小精靈"
                }]
            }]
            }
          })
          }
          else if (event.message.text.indexOf('Q12-') !== -1) {
            var ANS = event.message.text;
            for (let i in chatData) {
              if (chatData[i].Profile.userId == receiverId){
             newDBRef.child(i).child("Profile").update({"住宿：彰化福泰飯店":ANS});
              break;
             }
             event.reply({
              "type": "template",
              "altText": "this is a buttons template",
              "template": {
                  "type": "buttons",
                  "title": "請客戶輸入感想及建議",
                  "text": " ",
                  "actions": [
                      {
                        "type": "message",
                        "label": "填寫",
                        "text": "填寫"
                      }]
              }
            });
            }
          }
          else if(event.message.type === 'text' && message_lineTochat.trim() === '填寫') {

              msgObj.message = message_lineTochat ;
              console.log(msgObj);
                console.log('apiai') ;
                var app = apiai('ecbb41a02267478ebadbda7e7ee3b4b2');
                var request = app.textRequest(msgObj.message, {
                    sessionId: 'dafb019e-753f-4f6e-ab71-bd13d5d6910e'
                });
                request.on('response', function(response) {
                  let action = response.result.action ;
                  let speech = response.result.fulfillment.messages[0].speech ;
                  let parameter = response.result.parameters ;
                  let complete = !response.result.actionIncomplete ;
                  console.log('apiai-2') ;
                  console.log(response.result) ;
                });
                request.on('error', function(error) {
                    console.log(error);
                });
                request.end();
                let  = ('假日不得預約');
                    event.reply({
                         type: 'text',
                         text: SSday
                     });
                // console.log(app) ;
                // console.log(request);
               console.log('done') ;
          }
                //↑此段現在沒有用處
          //↑董事長遊台灣

        //↓預約功能
             else if(event.message.type === 'text' && message_lineTochat.trim() === '預約DEMO') {
                          io.sockets.emit('new message', {
                              msg: '已接收顯示預約日期',
                              name: receiverId,
                          });
                          event.reply({
                              "type": "template",
                              "altText": "Welcome Template",
                              "template": {
                                type: 'carousel',
                          "columns": [{
                              "title": '預約日期',
                              "text": MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7]+'~'+MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7],
                              "actions": [{
                                "type": "message",
                                  "label": YY+ " 年 " + MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7],
                                  "text": YY+ " 年 " + MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7]
                              },{
                                "type": "message",
                                  "label": YY+ " 年 " + MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7],
                                  "text": YY+ " 年 " + MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7]
                              },{
                                "type": "message",
                                  "label": YY+ " 年 " + MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7],
                                  "text": YY+ " 年 " + MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7]
                              }]
                          },{
                              "title": '預約日期',
                              "text": MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7]+'~'+MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7],
                              "actions": [{
                                "type": "message",
                                  "label": YY+ " 年 " + MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7],
                                  "text": YY+ " 年 " + MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7]
                              },{
                                "type": "message",
                                  "label": YY+ " 年 " + MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7],
                                  "text": YY+ " 年 " + MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7]
                              },{
                                "type": "message",
                                  "label": YY+ " 年 " + MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7],
                                  "text": YY+ " 年 " + MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7]
                              }]
                          },{
                              "title": '預約日期',
                              "text": MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7]+'~'+MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7],
                              "actions": [{
                                "type": "message",
                                  "label": YY+ " 年 " + MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7],
                                  "text": YY+ " 年 " + MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7]
                              },{
                                "type": "message",
                                  "label": YY+ " 年 " + MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7],
                                  "text": YY+ " 年 " + MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7]
                              },{
                                "type": "message",
                                  "label": YY+ " 年 " + MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7],
                                  "text": YY+ " 年 " + MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7]
                              }]
                          }]
                          }
                        })
                      }

/*----------------------------------------------------預約分類------------------------------------------------------------*/
          //DD+1
          else if (event.message.type === 'text' && message_lineTochat.trim() === YY+ " 年 " + MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7]) {
                 io.sockets.emit('new message', {
                     msg: '已接收顯示'+YY+ " 年 " + MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7],
                     name: receiverId
                 });
                 if((day+1)%7 != 0 && (day+1)%7 != 6){
                 event.reply({
                     "type": "template",
                     "altText": "Welcome Template",
                     "template": {
                       type: 'carousel',
                 "columns": [{
                     "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7],
                     "text": "上午時段\n注意:預約日期，假日一概不受理。",
                     "actions": [{
                       "type": "message",
                         "label": '10:00-11:00',
                         "text": MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7]+"10:00-11:00"
                     },{
                       "type": "message",
                         "label": '11:00-12:00',
                         "text": MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7]+"11:00-12:00"
                     }]
                 },{
                     "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7],
                     "text": "下午時段\n注意:預約日期，假日一概不受理。",
                     "actions": [{
                       "type": "message",
                         "label": '15:00-16:00',
                         "text": MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7]+"15:00-16:00"
                     },{
                       "type": "message",
                         "label": '16:00-17:00',
                         "text": MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7]+"16:00-17:00"
                     }]
                 }]
                 }
               });
             } else {
               let SSday = ('假日不得預約');
                   event.reply({
                        type: 'text',
                        text: SSday
                    });
             }
             }
             /**/
             else if(event.message.type === 'text' && message_lineTochat.trim() === '旅遊預約') {
                          io.sockets.emit('new message', {
                              msg: '已接收顯示預約日期',
                              name: receiverId,
                          });
                          event.reply({
                              "type": "template",
                              "altText": "Welcome Template",
                              "template": {
                                type: 'carousel',
                          "columns": [{
                              "title": '斯洛維尼',
                              "text": "10/16團-$168,888/位\n11/27團-$156,888/位\n2018/1/29團-$156,888/位",
                              "actions": [{
                                "type": "message",
                                  "label":"斯洛維尼亞10/16~10/25",
                                  "text":"斯洛維尼亞10/16~10/25"
                              },{
                                "type": "message",
                                  "label":"斯洛維尼亞11/27~12/06",
                                  "text":"斯洛維尼亞11/27~12/06"
                              },{
                                "type": "message",
                                  "label":"斯洛維尼亞2018/1/29~2/07",
                                  "text":"斯洛維尼亞2018/1/29~2/07"
                              }]
                          },{
                              "title": '杜拜',
                              "text": "11/10團-$194,888/位\n12/15團-$194,888/位\n",
                              "actions": [{
                                "type": "message",
                                  "label":"杜拜11/10~11/17",
                                  "text":"杜拜11/10~11/17"
                              },{
                                "type": "message",
                                  "label":"杜拜12/15~12/22",
                                  "text":"杜拜12/15~12/22"
                              },{
                                "type": "message",
                                  "label":"-",
                                  "text":" "
                              }]
                          },{
                              "title": '約旦、以色列',
                              "text": "12/3團-$199,888/位\n\n",
                              "actions": [{
                                "type": "message",
                                  "label":"約旦.以色列12/3~12/15",
                                  "text":"約旦.以色列12/3~12/15"
                              },{
                                "type": "message",
                                  "label":"-",
                                  "text":" "
                              },{
                                "type": "message",
                                  "label":"-",
                                  "text":" "
                              }]
                          }]
                          }
                        })
                      }
             else if (event.message.type === 'text' && message_lineTochat.trim() === "斯洛維尼亞10/16~10/25") {
               var Rdate = event.message.text;
               console.log(count);
               for (let i in chatData) {
               if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                 let reservation_YES = ('此時段預約過');
                 event.reply({
                      type: 'text',
                      text: reservation_YES
                  });
                  return;
               }
             }
               for (let i in chatData) {
                 if(chatData[i].Profile.Reservation == Rdate) count++;
               }
               if (count<2){
                 for (let i in chatData) {
                   if (chatData[i].Profile.userId == receiverId){
                  newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                  let reservation_YES = ('預約成功');
                  event.reply({
                       type: 'text',
                       text: reservation_YES
                   });
                   count=0;
                   break;
                  }
                 }
               }
               else {
                 for (let i in chatData) {
                 let reservation_YES = ('預約已滿');
                 event.reply({
                      type: 'text',
                      text: reservation_YES
                  });
                  count=0;
               }
             }
              }
              else if (event.message.type === 'text' && message_lineTochat.trim() === "斯洛維尼亞11/27~12/06") {
                var Rdate = event.message.text;
                console.log(count);
                for (let i in chatData) {
                if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                  let reservation_YES = ('此時段預約過');
                  event.reply({
                       type: 'text',
                       text: reservation_YES
                   });
                   return;
                }
              }
                for (let i in chatData) {
                  if(chatData[i].Profile.Reservation == Rdate) count++;
                }
                if (count<2){
                  for (let i in chatData) {
                    if (chatData[i].Profile.userId == receiverId){
                   newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                   let reservation_YES = ('預約成功');
                   event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count=0;
                    break;
                   }
                  }
                }
                else {
                  for (let i in chatData) {
                  let reservation_YES = ('預約已滿');
                  event.reply({
                       type: 'text',
                       text: reservation_YES
                   });
                   count=0;
                }
              }
               }
               else if (event.message.type === 'text' && message_lineTochat.trim() === "斯洛維尼亞2018/1/29~2/07") {
                 var Rdate = event.message.text;
                 console.log(count);
                 for (let i in chatData) {
                 if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                   let reservation_YES = ('此時段預約過');
                   event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    return;
                 }
               }
                 for (let i in chatData) {
                   if(chatData[i].Profile.Reservation == Rdate) count++;
                 }
                 if (count<2){
                   for (let i in chatData) {
                     if (chatData[i].Profile.userId == receiverId){
                    newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                    let reservation_YES = ('預約成功');
                    event.reply({
                         type: 'text',
                         text: reservation_YES
                     });
                     count=0;
                     break;
                    }
                   }
                 }
                 else {
                   for (let i in chatData) {
                   let reservation_YES = ('預約已滿');
                   event.reply({
                        type: 'text',
                        text: reservation_YES
                    });
                    count=0;
                 }
               }
                }
                else if (event.message.type === 'text' && message_lineTochat.trim() === "杜拜11/10~11/17") {
                  var Rdate = event.message.text;
                  console.log(count);
                  for (let i in chatData) {
                  if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                    let reservation_YES = ('此時段預約過');
                    event.reply({
                         type: 'text',
                         text: reservation_YES
                     });
                     return;
                  }
                }
                  for (let i in chatData) {
                    if(chatData[i].Profile.Reservation == Rdate) count++;
                  }
                  if (count<2){
                    for (let i in chatData) {
                      if (chatData[i].Profile.userId == receiverId){
                     newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                     let reservation_YES = ('預約成功');
                     event.reply({
                          type: 'text',
                          text: reservation_YES
                      });
                      count=0;
                      break;
                     }
                    }
                  }
                  else {
                    for (let i in chatData) {
                    let reservation_YES = ('預約已滿');
                    event.reply({
                         type: 'text',
                         text: reservation_YES
                     });
                     count=0;
                  }
                }
                 }
                 else if (event.message.type === 'text' && message_lineTochat.trim() === "杜拜12/15~12/22") {
                   var Rdate = event.message.text;
                   console.log(count);
                   for (let i in chatData) {
                   if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                     let reservation_YES = ('此時段預約過');
                     event.reply({
                          type: 'text',
                          text: reservation_YES
                      });
                      return;
                   }
                 }
                   for (let i in chatData) {
                     if(chatData[i].Profile.Reservation == Rdate) count++;
                   }
                   if (count<2){
                     for (let i in chatData) {
                       if (chatData[i].Profile.userId == receiverId){
                      newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                      let reservation_YES = ('預約成功');
                      event.reply({
                           type: 'text',
                           text: reservation_YES
                       });
                       count=0;
                       break;
                      }
                     }
                   }
                   else {
                     for (let i in chatData) {
                     let reservation_YES = ('預約已滿');
                     event.reply({
                          type: 'text',
                          text: reservation_YES
                      });
                      count=0;
                   }
                 }
                  }
                  else if (event.message.type === 'text' && message_lineTochat.trim() === "約旦.以色列12/3~12/15") {
                    var Rdate = event.message.text;
                    console.log(count);
                    for (let i in chatData) {
                    if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                      let reservation_YES = ('此時段預約過');
                      event.reply({
                           type: 'text',
                           text: reservation_YES
                       });
                       return;
                    }
                  }
                    for (let i in chatData) {
                      if(chatData[i].Profile.Reservation == Rdate) count++;
                    }
                    if (count<2){
                      for (let i in chatData) {
                        if (chatData[i].Profile.userId == receiverId){
                       newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                       let reservation_YES = ('預約成功');
                       event.reply({
                            type: 'text',
                            text: reservation_YES
                        });
                        count=0;
                        break;
                       }
                      }
                    }
                    else {
                      for (let i in chatData) {
                      let reservation_YES = ('預約已滿');
                      event.reply({
                           type: 'text',
                           text: reservation_YES
                       });
                       count=0;
                    }
                  }
                   }
              /**/
             else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7]+"10:00-11:00") {
               var Rdate = event.message.text;
               console.log(count);
               for (let i in chatData) {
               if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                 let reservation_YES = ('此時段預約過');
                 event.reply({
                      type: 'text',
                      text: reservation_YES
                  });
                  return;
               }
             }
               for (let i in chatData) {
                 if(chatData[i].Profile.Reservation == Rdate) count++;
               }
               if (count<2){
                 for (let i in chatData) {
                   if (chatData[i].Profile.userId == receiverId){
                  newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                  let reservation_YES = ('預約成功');
                  event.reply({
                       type: 'text',
                       text: reservation_YES
                   });
                   count=0;
                   break;
                  }
                 }
               }
               else {
                 for (let i in chatData) {
                 let reservation_YES = ('預約已滿');
                 event.reply({
                      type: 'text',
                      text: reservation_YES
                  });
                  count=0;
               }
             }
              }
              else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7]+"11:00-12:00") {
              var Rdate = event.message.text;
              console.log(count);
              for (let i in chatData) {
              if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                let reservation_YES = ('此時段預約過');
                event.reply({
                     type: 'text',
                     text: reservation_YES
                 });
                 return;
              }
            }
              for (let i in chatData) {
                if(chatData[i].Profile.Reservation == Rdate) count++;
              }
              if (count<2){
                for (let i in chatData) {
                  if (chatData[i].Profile.userId == receiverId){
                 newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                 let reservation_YES = ('預約成功');
                 event.reply({
                      type: 'text',
                      text: reservation_YES
                  });
                  count=0;
                  break;
                 }
                }
              }else {
                for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                     type: 'text',
                     text: reservation_YES
                 });
                 count=0;
              }
            }
              }
              else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7]+"15:00-16:00") {
              var Rdate = event.message.text;
              console.log(count);
              for (let i in chatData) {
              if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                let reservation_YES = ('此時段預約過');
                event.reply({
                     type: 'text',
                     text: reservation_YES
                 });
                 return;
              }
            }
              for (let i in chatData) {
                if(chatData[i].Profile.Reservation == Rdate) count++;
              }
              if (count<2){
                for (let i in chatData) {
                  if (chatData[i].Profile.userId == receiverId){
                 newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                 let reservation_YES = ('預約成功');
                 event.reply({
                      type: 'text',
                      text: reservation_YES
                  });
                  count=0;
                  break;
                 }
                }
              }else {
                for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                     type: 'text',
                     text: reservation_YES
                 });
                 count=0;
              }
            }
              }
              else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+1)+'日'+ day_list[(day+1)%7]+"16:00-17:00") {
              var Rdate = event.message.text;
              for (let i in chatData) {
              if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                let reservation_YES = ('此時段預約過');
                event.reply({
                     type: 'text',
                     text: reservation_YES
                 });
                 return;
              }
            }
              for (let i in chatData) {
                if(chatData[i].Profile.Reservation == Rdate) count++;
              }
              if (count<2){
                for (let i in chatData) {
                  if (chatData[i].Profile.userId == receiverId){
                 newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                 let reservation_YES = ('預約成功');
                 event.reply({
                      type: 'text',
                      text: reservation_YES
                  });
                  count=0;
                  break;
                 }
                }
              }else {
                for (let i in chatData) {
                let reservation_YES = ('預約已滿');
                event.reply({
                     type: 'text',
                     text: reservation_YES
                 });
                 count=0;
              }
            }
              }
              //DD+2
             else if (event.message.type === 'text' && message_lineTochat.trim() === YY+ " 年 " + MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7]) {
                     io.sockets.emit('new message', {
                         msg: '已接收顯示'+YY+ " 年 " + MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7],
                         name: receiverId
                     });
                     if((day+2)%7 != 0 && (day+2)%7 != 6){
                     event.reply({
                         "type": "template",
                         "altText": "Welcome Template",
                         "template": {
                           type: 'carousel',
                     "columns": [{
                         "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7],
                         "text": "上午時段\n注意:預約日期，假日一概不受理。",
                         "actions": [{
                           "type": "message",
                             "label": '10:00-11:00',
                             "text": MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7]+"10:00-11:00"
                         },{
                           "type": "message",
                             "label": '11:00-12:00',
                             "text": MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7]+"11:00-12:00"
                         }]
                     },{
                         "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7],
                         "text": "下午時段\n注意:預約日期，假日一概不受理。",
                         "actions": [{
                           "type": "message",
                             "label": '15:00-16:00',
                             "text": MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7]+"15:00-16:00"
                         },{
                           "type": "message",
                             "label": '16:00-17:00',
                             "text": MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7]+"16:00-17:00"
                         }]
                     }]
                     }
                   });
                 } else {
                   let SSday = ('假日不得預約');
                       event.reply({
                            type: 'text',
                            text: SSday
                        });
                 }

                 }
                 else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7]+"10:00-11:00") {
                   var Rdate = event.message.text;
                   for (let i in chatData) {
                   if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                     let reservation_YES = ('此時段預約過');
                     event.reply({
                          type: 'text',
                          text: reservation_YES
                      });
                      return;
                   }
                 }
                   for (let i in chatData) {
                     if(chatData[i].Profile.Reservation == Rdate) count++;
                   }
                   if (count<2){
                     for (let i in chatData) {
                       if (chatData[i].Profile.userId == receiverId){
                      newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                      let reservation_YES = ('預約成功');
                      event.reply({
                           type: 'text',
                           text: reservation_YES
                       });
                       count=0;
                       break;
                      }
                     }
                   }else {
                     for (let i in chatData) {
                     let reservation_YES = ('預約已滿');
                     event.reply({
                          type: 'text',
                          text: reservation_YES
                      });
                      count=0;
                   }
                 }
                  }
                  else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7]+"11:00-12:00") {
                  var Rdate = event.message.text;
                  for (let i in chatData) {
                  if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                    let reservation_YES = ('此時段預約過');
                    event.reply({
                         type: 'text',
                         text: reservation_YES
                     });
                     return;
                  }
                }
                  for (let i in chatData) {
                    if(chatData[i].Profile.Reservation == Rdate) count++;
                  }
                  if (count<2){
                    for (let i in chatData) {
                      if (chatData[i].Profile.userId == receiverId){
                     newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                     let reservation_YES = ('預約成功');
                     event.reply({
                          type: 'text',
                          text: reservation_YES
                      });
                      count=0;
                      break;
                     }
                    }
                  }else {
                    for (let i in chatData) {
                    let reservation_YES = ('預約已滿');
                    event.reply({
                         type: 'text',
                         text: reservation_YES
                     });
                     count=0;
                  }
                }
                  }
                  else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7]+"15:00-16:00") {
                  var Rdate = event.message.text;
                  for (let i in chatData) {
                  if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                    let reservation_YES = ('此時段預約過');
                    event.reply({
                         type: 'text',
                         text: reservation_YES
                     });
                     return;
                  }
                }
                  for (let i in chatData) {
                    if(chatData[i].Profile.Reservation == Rdate) count++;
                  }
                  if (count<2){
                    for (let i in chatData) {
                      if (chatData[i].Profile.userId == receiverId){
                     newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                     let reservation_YES = ('預約成功');
                     event.reply({
                          type: 'text',
                          text: reservation_YES
                      });
                      count=0;
                      break;
                     }
                    }
                  }else {
                    for (let i in chatData) {
                    let reservation_YES = ('預約已滿');
                    event.reply({
                         type: 'text',
                         text: reservation_YES
                     });
                     count=0;
                  }
                }
                  }
                  else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+2)+'日'+ day_list[(day+2)%7]+"16:00-17:00") {
                  var Rdate = event.message.text;
                  for (let i in chatData) {
                  if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                    let reservation_YES = ('此時段預約過');
                    event.reply({
                         type: 'text',
                         text: reservation_YES
                     });
                     return;
                  }
                }
                  for (let i in chatData) {
                    if(chatData[i].Profile.Reservation == Rdate) count++;
                  }
                  if (count<2){
                    for (let i in chatData) {
                      if (chatData[i].Profile.userId == receiverId){
                     newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                     let reservation_YES = ('預約成功');
                     event.reply({
                          type: 'text',
                          text: reservation_YES
                      });
                      count=0;
                      break;
                     }
                    }
                  }else {
                    for (let i in chatData) {
                    let reservation_YES = ('預約已滿');
                    event.reply({
                         type: 'text',
                         text: reservation_YES
                     });
                     count=0;
                  }
                }
                  }
                 //DD+3
                else if (event.message.type === 'text' && message_lineTochat.trim() === YY+ " 年 " + MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7]) {
                        io.sockets.emit('new message', {
                            msg: '已接收顯示'+YY+ " 年 " + MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7],
                            name: receiverId
                        });
                        if((day+3)%7 != 0 && (day+3)%7 != 6){
                        event.reply({
                            "type": "template",
                            "altText": "Welcome Template",
                            "template": {
                              type: 'carousel',
                        "columns": [{
                            "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7],
                            "text": "上午時段\n注意:預約日期，假日一概不受理。",
                            "actions": [{
                              "type": "message",
                                "label": '10:00-11:00',
                                "text": MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7]+"10:00-11:00"
                            },{
                              "type": "message",
                                "label": '11:00-12:00',
                                "text": MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7]+"11:00-12:00"
                            }]
                        },{
                            "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7],
                            "text": "下午時段\n注意:預約日期，假日一概不受理。",
                            "actions": [{
                              "type": "message",
                                "label": '15:00-16:00',
                                "text": MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7]+"15:00-16:00"
                            },{
                              "type": "message",
                                "label": '16:00-17:00',
                                "text": MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7]+"16:00-17:00"
                            }]
                        }]
                        }
                      });
                    } else {
                      let SSday = ('假日不得預約');
                          event.reply({
                               type: 'text',
                               text: SSday
                           });
                    }

                    }
                    else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7]+"10:00-11:00") {
                      var Rdate = event.message.text;
                      for (let i in chatData) {
                      if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                        let reservation_YES = ('此時段預約過');
                        event.reply({
                             type: 'text',
                             text: reservation_YES
                         });
                         return;
                      }
                    }
                      for (let i in chatData) {
                        if(chatData[i].Profile.Reservation == Rdate) count++;
                      }
                      if (count<2){
                        for (let i in chatData) {
                          if (chatData[i].Profile.userId == receiverId){
                         newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                         let reservation_YES = ('預約成功');
                         event.reply({
                              type: 'text',
                              text: reservation_YES
                          });
                          count=0;
                          break;
                         }
                        }
                      }else {
                        for (let i in chatData) {
                        let reservation_YES = ('預約已滿');
                        event.reply({
                             type: 'text',
                             text: reservation_YES
                         });
                         count=0;
                      }
                    }
                     }
                     else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7]+"11:00-12:00") {
                     var Rdate = event.message.text;
                     for (let i in chatData) {
                     if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                       let reservation_YES = ('此時段預約過');
                       event.reply({
                            type: 'text',
                            text: reservation_YES
                        });
                        return;
                     }
                   }
                     for (let i in chatData) {
                       if(chatData[i].Profile.Reservation == Rdate) count++;
                     }
                     if (count<2){
                       for (let i in chatData) {
                         if (chatData[i].Profile.userId == receiverId){
                        newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                        let reservation_YES = ('預約成功');
                        event.reply({
                             type: 'text',
                             text: reservation_YES
                         });
                         count=0;
                         break;
                        }
                       }
                     }else {
                       for (let i in chatData) {
                       let reservation_YES = ('預約已滿');
                       event.reply({
                            type: 'text',
                            text: reservation_YES
                        });
                        count=0;
                     }
                   }
                     }
                     else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7]+"15:00-16:00") {
                     var Rdate = event.message.text;
                     for (let i in chatData) {
                     if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                       let reservation_YES = ('此時段預約過');
                       event.reply({
                            type: 'text',
                            text: reservation_YES
                        });
                        return;
                     }
                   }
                     for (let i in chatData) {
                       if(chatData[i].Profile.Reservation == Rdate) count++;
                     }
                     if (count<2){
                       for (let i in chatData) {
                         if (chatData[i].Profile.userId == receiverId){
                        newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                        let reservation_YES = ('預約成功');
                        event.reply({
                             type: 'text',
                             text: reservation_YES
                         });
                         count=0;
                         break;
                        }
                       }
                     }else {
                       for (let i in chatData) {
                       let reservation_YES = ('預約已滿');
                       event.reply({
                            type: 'text',
                            text: reservation_YES
                        });
                        count=0;
                     }
                   }
                     }
                     else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+3)+'日'+ day_list[(day+3)%7]+"16:00-17:00") {
                     var Rdate = event.message.text;
                     for (let i in chatData) {
                     if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                       let reservation_YES = ('此時段預約過');
                       event.reply({
                            type: 'text',
                            text: reservation_YES
                        });
                        return;
                     }
                   }
                     for (let i in chatData) {
                       if(chatData[i].Profile.Reservation == Rdate) count++;
                     }
                     if (count<2){
                       for (let i in chatData) {
                         if (chatData[i].Profile.userId == receiverId){
                        newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                        let reservation_YES = ('預約成功');
                        event.reply({
                             type: 'text',
                             text: reservation_YES
                         });
                         count=0;
                         break;
                        }
                       }
                     }else {
                       for (let i in chatData) {
                       let reservation_YES = ('預約已滿');
                       event.reply({
                            type: 'text',
                            text: reservation_YES
                        });
                        count=0;
                     }
                   }
                     }
                    //DD+4
                   else if (event.message.type === 'text' && message_lineTochat.trim() === YY+ " 年 " + MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7]) {
                           io.sockets.emit('new message', {
                               msg: '已接收顯示'+YY+ " 年 " + MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7],
                               name: receiverId
                           });
                           if((day+4)%7 != 0 && (day+4)%7 != 6){
                           event.reply({
                               "type": "template",
                               "altText": "Welcome Template",
                               "template": {
                                 type: 'carousel',
                           "columns": [{
                               "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7],
                               "text": "上午時段\n注意:預約日期，假日一概不受理。",
                               "actions": [{
                                 "type": "message",
                                   "label": '10:00-11:00',
                                   "text": MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7]+"10:00-11:00"
                               },{
                                 "type": "message",
                                   "label": '11:00-12:00',
                                   "text": MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7]+"11:00-12:00"
                               }]
                           },{
                               "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7],
                               "text": "下午時段\n注意:預約日期，假日一概不受理。",
                               "actions": [{
                                 "type": "message",
                                   "label": '15:00-16:00',
                                   "text": MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7]+"15:00-16:00"
                               },{
                                 "type": "message",
                                   "label": '16:00-17:00',
                                   "text": MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7]+"16:00-17:00"
                               }]
                           }]
                           }
                         });
                       } else {
                         let SSday = ('假日不得預約');
                             event.reply({
                                  type: 'text',
                                  text: SSday
                              });
                       }

                       }
                       else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7]+"10:00-11:00") {
                         var Rdate = event.message.text;
                         for (let i in chatData) {
                         if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                           let reservation_YES = ('此時段預約過');
                           event.reply({
                                type: 'text',
                                text: reservation_YES
                            });
                            return;
                         }
                       }
                         for (let i in chatData) {
                           if(chatData[i].Profile.Reservation == Rdate) count++;
                         }
                         if (count<2){
                           for (let i in chatData) {
                             if (chatData[i].Profile.userId == receiverId){
                            newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                            let reservation_YES = ('預約成功');
                            event.reply({
                                 type: 'text',
                                 text: reservation_YES
                             });
                             count=0;
                             break;
                            }
                           }
                         }else {
                           for (let i in chatData) {
                           let reservation_YES = ('預約已滿');
                           event.reply({
                                type: 'text',
                                text: reservation_YES
                            });
                            count=0;
                         }
                       }
                        }
                        else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7]+"11:00-12:00") {
                        var Rdate = event.message.text;
                        for (let i in chatData) {
                        if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                          let reservation_YES = ('此時段預約過');
                          event.reply({
                               type: 'text',
                               text: reservation_YES
                           });
                           return;
                        }
                      }
                        for (let i in chatData) {
                          if(chatData[i].Profile.Reservation == Rdate) count++;
                        }
                        if (count<2){
                          for (let i in chatData) {
                            if (chatData[i].Profile.userId == receiverId){
                           newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                           let reservation_YES = ('預約成功');
                           event.reply({
                                type: 'text',
                                text: reservation_YES
                            });
                            count=0;
                            break;
                           }
                          }
                        }else {
                          for (let i in chatData) {
                          let reservation_YES = ('預約已滿');
                          event.reply({
                               type: 'text',
                               text: reservation_YES
                           });
                           count=0;
                        }
                      }
                        }
                        else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7]+"15:00-16:00") {
                        var Rdate = event.message.text;
                        for (let i in chatData) {
                        if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                          let reservation_YES = ('此時段預約過');
                          event.reply({
                               type: 'text',
                               text: reservation_YES
                           });
                           return;
                        }
                      }
                        for (let i in chatData) {
                          if(chatData[i].Profile.Reservation == Rdate) count++;
                        }
                        if (count<2){
                          for (let i in chatData) {
                            if (chatData[i].Profile.userId == receiverId){
                           newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                           let reservation_YES = ('預約成功');
                           event.reply({
                                type: 'text',
                                text: reservation_YES
                            });
                            count=0;
                            break;
                           }
                          }
                        }else {
                          for (let i in chatData) {
                          let reservation_YES = ('預約已滿');
                          event.reply({
                               type: 'text',
                               text: reservation_YES
                           });
                           count=0;
                        }
                      }
                        }
                        else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+4)+'日'+ day_list[(day+4)%7]+"16:00-17:00") {
                        var Rdate = event.message.text;
                        for (let i in chatData) {
                        if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                          let reservation_YES = ('此時段預約過');
                          event.reply({
                               type: 'text',
                               text: reservation_YES
                           });
                           return;
                        }
                      }
                        for (let i in chatData) {
                          if(chatData[i].Profile.Reservation == Rdate) count++;
                        }
                        if (count<2){
                          for (let i in chatData) {
                            if (chatData[i].Profile.userId == receiverId){
                           newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                           let reservation_YES = ('預約成功');
                           event.reply({
                                type: 'text',
                                text: reservation_YES
                            });
                            count=0;
                            break;
                           }
                          }
                        }else {
                          for (let i in chatData) {
                          let reservation_YES = ('預約已滿');
                          event.reply({
                               type: 'text',
                               text: reservation_YES
                           });
                           count=0;
                        }
                      }
                        }
                       //DD+5
                      else if (event.message.type === 'text' && message_lineTochat.trim() === YY+ " 年 " + MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7]) {
                              io.sockets.emit('new message', {
                                  msg: '已接收顯示'+YY+ " 年 " + MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7],
                                  name: receiverId
                              });
                              if((day+5)%7 !=0 && (day+5)%7 !=6){
                              event.reply({
                                  "type": "template",
                                  "altText": "Welcome Template",
                                  "template": {
                                    type: 'carousel',
                              "columns": [{
                                  "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7],
                                  "text": "上午時段\n注意:預約日期，假日一概不受理。",
                                  "actions": [{
                                    "type": "message",
                                      "label": '10:00-11:00',
                                      "text": MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7]+"10:00-11:00"
                                  },{
                                    "type": "message",
                                      "label": '11:00-12:00',
                                      "text": MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7]+"11:00-12:00"
                                  }]
                              },{
                                  "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7],
                                  "text": "下午時段\n注意:預約日期，假日一概不受理。",
                                  "actions": [{
                                    "type": "message",
                                      "label": '15:00-16:00',
                                      "text": MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7]+"15:00-16:00"
                                  },{
                                    "type": "message",
                                      "label": '16:00-17:00',
                                      "text": MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7]+"16:00-17:00"
                                  }]
                              }]
                              }
                            });
                          } else
                          {
                            let Holiday = ('假日不得預約');
                                event.reply({
                                     type: 'text',
                                     text: Holiday
                                 });

                          }
                          }
                          else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7]+"10:00-11:00") {
                            var Rdate = event.message.text;
                            for (let i in chatData) {
                            if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                              let reservation_YES = ('此時段預約過');
                              event.reply({
                                   type: 'text',
                                   text: reservation_YES
                               });
                               return;
                            }
                          }
                            for (let i in chatData) {
                              if(chatData[i].Profile.Reservation == Rdate) count++;
                            }
                            if (count<2){
                              for (let i in chatData) {
                                if (chatData[i].Profile.userId == receiverId){
                               newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                               let reservation_YES = ('預約成功');
                               event.reply({
                                    type: 'text',
                                    text: reservation_YES
                                });
                                count=0;
                                break;
                               }
                              }
                            }else {
                              for (let i in chatData) {
                              let reservation_YES = ('預約已滿');
                              event.reply({
                                   type: 'text',
                                   text: reservation_YES
                               });
                               count=0;
                            }
                          }
                           }
                           else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7]+"11:00-12:00") {
                           var Rdate = event.message.text;
                           for (let i in chatData) {
                           if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                             let reservation_YES = ('此時段預約過');
                             event.reply({
                                  type: 'text',
                                  text: reservation_YES
                              });
                              return;
                           }
                         }
                           for (let i in chatData) {
                             if(chatData[i].Profile.Reservation == Rdate) count++;
                           }
                           if (count<2){
                             for (let i in chatData) {
                               if (chatData[i].Profile.userId == receiverId){
                              newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                              let reservation_YES = ('預約成功');
                              event.reply({
                                   type: 'text',
                                   text: reservation_YES
                               });
                               count=0;
                               break;
                              }
                             }
                           }else {
                             for (let i in chatData) {
                             let reservation_YES = ('預約已滿');
                             event.reply({
                                  type: 'text',
                                  text: reservation_YES
                              });
                              count=0;
                           }
                         }
                           }
                           else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7]+"15:00-16:00") {
                           var Rdate = event.message.text;
                           for (let i in chatData) {
                           if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                             let reservation_YES = ('此時段預約過');
                             event.reply({
                                  type: 'text',
                                  text: reservation_YES
                              });
                              return;
                           }
                         }
                           for (let i in chatData) {
                             if(chatData[i].Profile.Reservation == Rdate) count++;
                           }
                           if (count<2){
                             for (let i in chatData) {
                               if (chatData[i].Profile.userId == receiverId){
                              newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                              let reservation_YES = ('預約成功');
                              event.reply({
                                   type: 'text',
                                   text: reservation_YES
                               });
                               count=0;
                               break;
                              }
                             }
                           }else {
                             for (let i in chatData) {
                             let reservation_YES = ('預約已滿');
                             event.reply({
                                  type: 'text',
                                  text: reservation_YES
                              });
                              count=0;
                           }
                         }
                           }
                           else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+5)+'日'+ day_list[(day+5)%7]+"16:00-17:00") {
                           var Rdate = event.message.text;
                           for (let i in chatData) {
                           if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                             let reservation_YES = ('此時段預約過');
                             event.reply({
                                  type: 'text',
                                  text: reservation_YES
                              });
                              return;
                           }
                         }
                           for (let i in chatData) {
                             if(chatData[i].Profile.Reservation == Rdate) count++;
                           }
                           if (count<2){
                             for (let i in chatData) {
                               if (chatData[i].Profile.userId == receiverId){
                              newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                              let reservation_YES = ('預約成功');
                              event.reply({
                                   type: 'text',
                                   text: reservation_YES
                               });
                               count=0;
                               break;
                              }
                             }
                           }else {
                             for (let i in chatData) {
                             let reservation_YES = ('預約已滿');
                             event.reply({
                                  type: 'text',
                                  text: reservation_YES
                              });
                              count=0;
                           }
                         }
                           }
                          //DD+6
                         else if (event.message.type === 'text' && message_lineTochat.trim() === YY+ " 年 " + MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7]) {
                                 io.sockets.emit('new message', {
                                     msg: '已接收顯示'+YY+ " 年 " + MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7],
                                     name: receiverId
                                 });
                                 if((day+6)%7 != 0 && (day+6)%7 != 6){
                                 event.reply({
                                     "type": "template",
                                     "altText": "Welcome Template",
                                     "template": {
                                       type: 'carousel',
                                 "columns": [{
                                     "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7],
                                     "text": "上午時段\n注意:預約日期，假日一概不受理。",
                                     "actions": [{
                                       "type": "message",
                                         "label": '10:00-11:00',
                                         "text": MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7]+"10:00-11:00"
                                     },{
                                       "type": "message",
                                         "label": '11:00-12:00',
                                         "text": MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7]+"11:00-12:00"
                                     }]
                                 },{
                                     "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7],
                                     "text": "下午時段\n注意:預約日期，假日一概不受理。",
                                     "actions": [{
                                       "type": "message",
                                         "label": '15:00-16:00',
                                         "text": MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7]+"15:00-16:00"
                                     },{
                                       "type": "message",
                                         "label": '16:00-17:00',
                                         "text": MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7]+"16:00-17:00"
                                     }]
                                 }]
                                 }
                               });
                             } else {
                               let SSday = ('假日不得預約');
                                   event.reply({
                                        type: 'text',
                                        text: SSday
                                    });
                             }

                             }
                             else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7]+"10:00-11:00") {
                               var Rdate = event.message.text;
                               for (let i in chatData) {
                               if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                 let reservation_YES = ('此時段預約過');
                                 event.reply({
                                      type: 'text',
                                      text: reservation_YES
                                  });
                                  return;
                               }
                             }
                               for (let i in chatData) {
                                 if(chatData[i].Profile.Reservation == Rdate) count++;
                               }
                               if (count<2){
                                 for (let i in chatData) {
                                   if (chatData[i].Profile.userId == receiverId){
                                  newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                  let reservation_YES = ('預約成功');
                                  event.reply({
                                       type: 'text',
                                       text: reservation_YES
                                   });
                                   count=0;
                                   break;
                                  }
                                 }
                               }else {
                                 for (let i in chatData) {
                                 let reservation_YES = ('預約已滿');
                                 event.reply({
                                      type: 'text',
                                      text: reservation_YES
                                  });
                                  count=0;
                               }
                             }
                              }
                              else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7]+"11:00-12:00") {
                              var Rdate = event.message.text;
                              for (let i in chatData) {
                              if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                let reservation_YES = ('此時段預約過');
                                event.reply({
                                     type: 'text',
                                     text: reservation_YES
                                 });
                                 return;
                              }
                            }
                              for (let i in chatData) {
                                if(chatData[i].Profile.Reservation == Rdate) count++;
                              }
                              if (count<2){
                                for (let i in chatData) {
                                  if (chatData[i].Profile.userId == receiverId){
                                 newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                 let reservation_YES = ('預約成功');
                                 event.reply({
                                      type: 'text',
                                      text: reservation_YES
                                  });
                                  count=0;
                                  break;
                                 }
                                }
                              }else {
                                for (let i in chatData) {
                                let reservation_YES = ('預約已滿');
                                event.reply({
                                     type: 'text',
                                     text: reservation_YES
                                 });
                                 count=0;
                              }
                            }
                              }
                              else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7]+"15:00-16:00") {
                              var Rdate = event.message.text;
                              for (let i in chatData) {
                              if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                let reservation_YES = ('此時段預約過');
                                event.reply({
                                     type: 'text',
                                     text: reservation_YES
                                 });
                                 return;
                              }
                            }
                              for (let i in chatData) {
                                if(chatData[i].Profile.Reservation == Rdate) count++;
                              }
                              if (count<2){
                                for (let i in chatData) {
                                  if (chatData[i].Profile.userId == receiverId){
                                 newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                 let reservation_YES = ('預約成功');
                                 event.reply({
                                      type: 'text',
                                      text: reservation_YES
                                  });
                                  count=0;
                                  break;
                                 }
                                }
                              }else {
                                for (let i in chatData) {
                                let reservation_YES = ('預約已滿');
                                event.reply({
                                     type: 'text',
                                     text: reservation_YES
                                 });
                                 count=0;
                              }
                            }
                              }
                              else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+6)+'日'+ day_list[(day+6)%7]+"16:00-17:00") {
                              var Rdate = event.message.text;
                              for (let i in chatData) {
                              if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                let reservation_YES = ('此時段預約過');
                                event.reply({
                                     type: 'text',
                                     text: reservation_YES
                                 });
                                 return;
                              }
                            }
                              for (let i in chatData) {
                                if(chatData[i].Profile.Reservation == Rdate) count++;
                              }
                              if (count<2){
                                for (let i in chatData) {
                                  if (chatData[i].Profile.userId == receiverId){
                                 newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                 let reservation_YES = ('預約成功');
                                 event.reply({
                                      type: 'text',
                                      text: reservation_YES
                                  });
                                  count=0;
                                  break;
                                 }
                                }
                              }else {
                                for (let i in chatData) {
                                let reservation_YES = ('預約已滿');
                                event.reply({
                                     type: 'text',
                                     text: reservation_YES
                                 });
                                 count=0;
                              }
                            }
                              }
                             //DD+7
                            else if (event.message.type === 'text' && message_lineTochat.trim() === YY+ " 年 " + MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7]) {
                                    io.sockets.emit('new message', {
                                        msg: '已接收顯示'+YY+ " 年 " + MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7],
                                        name: receiverId
                                    });
                                    if((day+7)%7 != 0 && (day+7)%7 != 6){
                                    event.reply({
                                        "type": "template",
                                        "altText": "Welcome Template",
                                        "template": {
                                          type: 'carousel',
                                    "columns": [{
                                        "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7],
                                        "text": "上午時段\n注意:預約日期，假日一概不受理。",
                                        "actions": [{
                                          "type": "message",
                                            "label": '10:00-11:00',
                                            "text": MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7]+"10:00-11:00"
                                        },{
                                          "type": "message",
                                            "label": '11:00-12:00',
                                            "text": MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7]+"11:00-12:00"
                                        }]
                                    },{
                                        "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7],
                                        "text": "下午時段\n注意:預約日期，假日一概不受理。",
                                        "actions": [{
                                          "type": "message",
                                            "label": '15:00-16:00',
                                            "text": MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7]+"15:00-16:00"
                                        },{
                                          "type": "message",
                                            "label": '16:00-17:00',
                                            "text": MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7]+"16:00-17:00"
                                        }]
                                    }]
                                    }
                                  });
                                } else {
                                  let SSday = ('假日不得預約');
                                      event.reply({
                                           type: 'text',
                                           text: SSday
                                       });
                                }

                                }
                                else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7]+"10:00-11:00") {
                                  var Rdate = event.message.text;
                                  for (let i in chatData) {
                                  if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                    let reservation_YES = ('此時段預約過');
                                    event.reply({
                                         type: 'text',
                                         text: reservation_YES
                                     });
                                     return;
                                  }
                                }
                                  for (let i in chatData) {
                                    if(chatData[i].Profile.Reservation == Rdate) count++;
                                  }
                                  if (count<2){
                                    for (let i in chatData) {
                                      if (chatData[i].Profile.userId == receiverId){
                                     newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                     let reservation_YES = ('預約成功');
                                     event.reply({
                                          type: 'text',
                                          text: reservation_YES
                                      });
                                      count=0;
                                      break;
                                     }
                                    }
                                  }else {
                                    for (let i in chatData) {
                                    let reservation_YES = ('預約已滿');
                                    event.reply({
                                         type: 'text',
                                         text: reservation_YES
                                     });
                                     count=0;
                                  }
                                }
                                 }
                                 else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7]+"11:00-12:00") {
                                 var Rdate = event.message.text;
                                 for (let i in chatData) {
                                 if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                   let reservation_YES = ('此時段預約過');
                                   event.reply({
                                        type: 'text',
                                        text: reservation_YES
                                    });
                                    return;
                                 }
                               }
                                 for (let i in chatData) {
                                   if(chatData[i].Profile.Reservation == Rdate) count++;
                                 }
                                 if (count<2){
                                   for (let i in chatData) {
                                     if (chatData[i].Profile.userId == receiverId){
                                    newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                    let reservation_YES = ('預約成功');
                                    event.reply({
                                         type: 'text',
                                         text: reservation_YES
                                     });
                                     count=0;
                                     break;
                                    }
                                   }
                                 }else {
                                   for (let i in chatData) {
                                   let reservation_YES = ('預約已滿');
                                   event.reply({
                                        type: 'text',
                                        text: reservation_YES
                                    });
                                    count=0;
                                 }
                               }
                                 }
                                 else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7]+"15:00-16:00") {
                                 var Rdate = event.message.text;
                                 for (let i in chatData) {
                                 if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                   let reservation_YES = ('此時段預約過');
                                   event.reply({
                                        type: 'text',
                                        text: reservation_YES
                                    });
                                    return;
                                 }
                               }
                                 for (let i in chatData) {
                                   if(chatData[i].Profile.Reservation == Rdate) count++;
                                 }
                                 if (count<2){
                                   for (let i in chatData) {
                                     if (chatData[i].Profile.userId == receiverId){
                                    newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                    let reservation_YES = ('預約成功');
                                    event.reply({
                                         type: 'text',
                                         text: reservation_YES
                                     });
                                     count=0;
                                     break;
                                    }
                                   }
                                 }else {
                                   for (let i in chatData) {
                                   let reservation_YES = ('預約已滿');
                                   event.reply({
                                        type: 'text',
                                        text: reservation_YES
                                    });
                                    count=0;
                                 }
                               }
                                 }
                                 else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+7)+'日'+ day_list[(day+7)%7]+"16:00-17:00") {
                                 var Rdate = event.message.text;
                                 for (let i in chatData) {
                                 if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                   let reservation_YES = ('此時段預約過');
                                   event.reply({
                                        type: 'text',
                                        text: reservation_YES
                                    });
                                    return;
                                 }
                               }
                                 for (let i in chatData) {
                                   if(chatData[i].Profile.Reservation == Rdate) count++;
                                 }
                                 if (count<2){
                                   for (let i in chatData) {
                                     if (chatData[i].Profile.userId == receiverId){
                                    newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                    let reservation_YES = ('預約成功');
                                    event.reply({
                                         type: 'text',
                                         text: reservation_YES
                                     });
                                     count=0;
                                     break;
                                    }
                                   }
                                 }else {
                                   for (let i in chatData) {
                                   let reservation_YES = ('預約已滿');
                                   event.reply({
                                        type: 'text',
                                        text: reservation_YES
                                    });
                                    count=0;
                                 }
                               }
                                 }
                                //DD+8
                               else if (event.message.type === 'text' && message_lineTochat.trim() === YY+ " 年 " + MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7]) {
                                       io.sockets.emit('new message', {
                                           msg: '已接收顯示'+YY+ " 年 " + MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7],
                                           name: receiverId
                                       });
                                       if((day+8)%7 != 0 && (day+8)%7 != 6){
                                       event.reply({
                                           "type": "template",
                                           "altText": "Welcome Template",
                                           "template": {
                                             type: 'carousel',
                                       "columns": [{
                                           "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7],
                                           "text": "上午時段\n注意:預約日期，假日一概不受理。",
                                           "actions": [{
                                             "type": "message",
                                               "label": '10:00-11:00',
                                               "text": MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7]+"10:00-11:00"
                                           },{
                                             "type": "message",
                                               "label": '11:00-12:00',
                                               "text": MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7]+"11:00-12:00"
                                           }]
                                       },{
                                           "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7],
                                           "text": "下午時段\n注意:預約日期，假日一概不受理。",
                                           "actions": [{
                                             "type": "message",
                                               "label": '15:00-16:00',
                                               "text": MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7]+"15:00-16:00"
                                           },{
                                             "type": "message",
                                               "label": '16:00-17:00',
                                               "text": MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7]+"16:00-17:00"
                                           }]
                                       }]
                                       }
                                     });
                                   } else {
                                     let SSday = ('假日不得預約');
                                         event.reply({
                                              type: 'text',
                                              text: SSday
                                          });
                                   }

                                   }
                                   else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7]+"10:00-11:00") {
                                     var Rdate = event.message.text;
                                     for (let i in chatData) {
                                     if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                       let reservation_YES = ('此時段預約過');
                                       event.reply({
                                            type: 'text',
                                            text: reservation_YES
                                        });
                                        return;
                                     }
                                   }
                                     for (let i in chatData) {
                                       if(chatData[i].Profile.Reservation == Rdate) count++;
                                     }
                                     if (count<2){
                                       for (let i in chatData) {
                                         if (chatData[i].Profile.userId == receiverId){
                                        newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                        let reservation_YES = ('預約成功');
                                        event.reply({
                                             type: 'text',
                                             text: reservation_YES
                                         });
                                         count=0;
                                         break;
                                        }
                                       }
                                     }else {
                                       for (let i in chatData) {
                                       let reservation_YES = ('預約已滿');
                                       event.reply({
                                            type: 'text',
                                            text: reservation_YES
                                        });
                                        count=0;
                                     }
                                   }
                                    }
                                    else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7]+"11:00-12:00") {
                                    var Rdate = event.message.text;
                                    for (let i in chatData) {
                                    if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                      let reservation_YES = ('此時段預約過');
                                      event.reply({
                                           type: 'text',
                                           text: reservation_YES
                                       });
                                       return;
                                    }
                                  }
                                    for (let i in chatData) {
                                      if(chatData[i].Profile.Reservation == Rdate) count++;
                                    }
                                    if (count<2){
                                      for (let i in chatData) {
                                        if (chatData[i].Profile.userId == receiverId){
                                       newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                       let reservation_YES = ('預約成功');
                                       event.reply({
                                            type: 'text',
                                            text: reservation_YES
                                        });
                                        count=0;
                                        break;
                                       }
                                      }
                                    }else {
                                      for (let i in chatData) {
                                      let reservation_YES = ('預約已滿');
                                      event.reply({
                                           type: 'text',
                                           text: reservation_YES
                                       });
                                       count=0;
                                    }
                                  }
                                    }
                                    else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7]+"15:00-16:00") {
                                    var Rdate = event.message.text;
                                    for (let i in chatData) {
                                    if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                      let reservation_YES = ('此時段預約過');
                                      event.reply({
                                           type: 'text',
                                           text: reservation_YES
                                       });
                                       return;
                                    }
                                  }
                                    for (let i in chatData) {
                                      if(chatData[i].Profile.Reservation == Rdate) count++;
                                    }
                                    if (count<2){
                                      for (let i in chatData) {
                                        if (chatData[i].Profile.userId == receiverId){
                                       newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                       let reservation_YES = ('預約成功');
                                       event.reply({
                                            type: 'text',
                                            text: reservation_YES
                                        });
                                        count=0;
                                        break;
                                       }
                                      }
                                    }else {
                                      for (let i in chatData) {
                                      let reservation_YES = ('預約已滿');
                                      event.reply({
                                           type: 'text',
                                           text: reservation_YES
                                       });
                                       count=0;
                                    }
                                  }
                                    }
                                    else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+8)+'日'+ day_list[(day+8)%7]+"16:00-17:00") {
                                    var Rdate = event.message.text;
                                    for (let i in chatData) {
                                    if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                      let reservation_YES = ('此時段預約過');
                                      event.reply({
                                           type: 'text',
                                           text: reservation_YES
                                       });
                                       return;
                                    }
                                  }
                                    for (let i in chatData) {
                                      if(chatData[i].Profile.Reservation == Rdate) count++;
                                    }
                                    if (count<2){
                                      for (let i in chatData) {
                                        if (chatData[i].Profile.userId == receiverId){
                                       newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                       let reservation_YES = ('預約成功');
                                       event.reply({
                                            type: 'text',
                                            text: reservation_YES
                                        });
                                        count=0;
                                        break;
                                       }
                                      }
                                    }else {
                                      for (let i in chatData) {
                                      let reservation_YES = ('預約已滿');
                                      event.reply({
                                           type: 'text',
                                           text: reservation_YES
                                       });
                                       count=0;
                                    }
                                  }
                                    }
                                   //DD+9
                                  else if (event.message.type === 'text' && message_lineTochat.trim() === YY+ " 年 " + MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7]) {
                                          io.sockets.emit('new message', {
                                              msg: '已接收顯示'+YY+ " 年 " + MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7],
                                              name: receiverId
                                          });
                                          if((day+9)%7 != 0 && (day+9)%7 != 6){
                                          event.reply({
                                              "type": "template",
                                              "altText": "Welcome Template",
                                              "template": {
                                                type: 'carousel',
                                          "columns": [{
                                              "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7],
                                              "text": "上午時段\n注意:預約日期，假日一概不受理。",
                                              "actions": [{
                                                "type": "message",
                                                  "label": '10:00-11:00',
                                                  "text": MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7]+"10:00-11:00"
                                              },{
                                                "type": "message",
                                                  "label": '11:00-12:00',
                                                  "text": MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7]+"11:00-12:00"
                                              }]
                                          },{
                                              "title": "面試日期 " + YY+ " 年 " + MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7],
                                              "text": "下午時段\n注意:預約日期，假日一概不受理。",
                                              "actions": [{
                                                "type": "message",
                                                  "label": '15:00-16:00',
                                                  "text": MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7]+"15:00-16:00"
                                              },{
                                                "type": "message",
                                                  "label": '16:00-17:00',
                                                  "text": MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7]+"16:00-17:00"
                                              }]
                                          }]
                                          }
                                        });
                                      } else {
                                        let SSday = ('假日不得預約');
                                            event.reply({
                                                 type: 'text',
                                                 text: SSday
                                             });
                                      }

                                      }
                                      else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7]+"10:00-11:00") {
                                        var Rdate = event.message.text;
                                        for (let i in chatData) {
                                        if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                          let reservation_YES = ('此時段預約過');
                                          event.reply({
                                               type: 'text',
                                               text: reservation_YES
                                           });
                                           return;
                                        }
                                      }
                                        for (let i in chatData) {
                                          if(chatData[i].Profile.Reservation == Rdate) count++;
                                        }
                                        if (count<2){
                                          for (let i in chatData) {
                                            if (chatData[i].Profile.userId == receiverId){
                                           newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                           let reservation_YES = ('預約成功');
                                           event.reply({
                                                type: 'text',
                                                text: reservation_YES
                                            });
                                            count=0;
                                            break;
                                           }
                                          }
                                        }else {
                                          for (let i in chatData) {
                                          let reservation_YES = ('預約已滿');
                                          event.reply({
                                               type: 'text',
                                               text: reservation_YES
                                           });
                                           count=0;
                                        }
                                      }
                                       }
                                       else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7]+"11:00-12:00") {
                                       var Rdate = event.message.text;
                                       for (let i in chatData) {
                                       if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                         let reservation_YES = ('此時段預約過');
                                         event.reply({
                                              type: 'text',
                                              text: reservation_YES
                                          });
                                          return;
                                       }
                                     }
                                       for (let i in chatData) {
                                         if(chatData[i].Profile.Reservation == Rdate) count++;
                                       }
                                       if (count<2){
                                         for (let i in chatData) {
                                           if (chatData[i].Profile.userId == receiverId){
                                          newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                          let reservation_YES = ('預約成功');
                                          event.reply({
                                               type: 'text',
                                               text: reservation_YES
                                           });
                                           count=0;
                                           break;
                                          }
                                         }
                                       }else {
                                         for (let i in chatData) {
                                         let reservation_YES = ('預約已滿');
                                         event.reply({
                                              type: 'text',
                                              text: reservation_YES
                                          });
                                          count=0;
                                       }
                                     }
                                       }
                                       else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7]+"15:00-16:00") {
                                       var Rdate = event.message.text;
                                       for (let i in chatData) {
                                       if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                         let reservation_YES = ('此時段預約過');
                                         event.reply({
                                              type: 'text',
                                              text: reservation_YES
                                          });
                                          return;
                                       }
                                     }
                                       for (let i in chatData) {
                                         if(chatData[i].Profile.Reservation == Rdate) count++;
                                       }
                                       if (count<2){
                                         for (let i in chatData) {
                                           if (chatData[i].Profile.userId == receiverId){
                                          newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                          let reservation_YES = ('預約成功');
                                          event.reply({
                                               type: 'text',
                                               text: reservation_YES
                                           });
                                           count=0;
                                           break;
                                          }
                                         }
                                       }else {
                                         for (let i in chatData) {
                                         let reservation_YES = ('預約已滿');
                                         event.reply({
                                              type: 'text',
                                              text: reservation_YES
                                          });
                                          count=0;
                                       }
                                     }
                                       }
                                       else if (event.message.type === 'text' && message_lineTochat.trim() === MM +'月'+(DD+9)+'日'+ day_list[(day+9)%7]+"16:00-17:00") {
                                       var Rdate = event.message.text;
                                       for (let i in chatData) {
                                       if(chatData[i].Profile.userId == receiverId && chatData[i].Profile.Reservation == Rdate){
                                         let reservation_YES = ('此時段預約過');
                                         event.reply({
                                              type: 'text',
                                              text: reservation_YES
                                          });
                                          return;
                                       }
                                     }
                                       for (let i in chatData) {
                                         if(chatData[i].Profile.Reservation == Rdate) count++;
                                       }
                                       if (count<2){
                                         for (let i in chatData) {
                                           if (chatData[i].Profile.userId == receiverId){
                                          newDBRef.child(i).child("Profile").update({"Reservation":Rdate});
                                          let reservation_YES = ('預約成功');
                                          event.reply({
                                               type: 'text',
                                               text: reservation_YES
                                           });
                                           count=0;
                                           break;
                                          }
                                         }
                                       }else {
                                         for (let i in chatData) {
                                         let reservation_YES = ('預約已滿');
                                         event.reply({
                                              type: 'text',
                                              text: reservation_YES
                                          });
                                          count=0;
                                       }
                                     }
                                       }
                                      //↑預約功能
/*----------------------------------------------------問題分類------------------------------------------------------------*/
             else if(event.message.type === 'text' && message_lineTochat.trim() === '常見問題') {
                          io.sockets.emit('new message', {
                              msg: '...',
                              name: receiverId,
                          });
                          event.reply({
                           "type": "template",
                           "altText": "this is a buttons template",
                           "template": {
                               "type": "buttons",
                               "title": "常見問題",
                               "text": "參考Line 回應客人的事項\n海外部分,請參閱海外教案",
                               "actions": [
                                   {
                                     "type": "message",
                                     "label": "基本問題",
                                     "text": '基本問題'
                                   },{
                                     "type": "message",
                                     "label": "特殊問題",
                                     "text": "特殊問題"
                                   }]
                           }
                         });
                      }
/*----------------------------------------------------問題分類(A)------------------------------------------------------------*/
                      else if (event.message.type === 'text' && message_lineTochat.trim() === '基本問題') {
                        event.reply({
                            "type": "template",
                            "altText": "Welcome Template",
                            "template": {
                              type: 'carousel',
                        "columns": [{
                            "title": '基本問題',
                            "text": 'A1~A3',
                            "actions": [{
                              "type": "message",
                                "label": '報名海外或客製化行程',
                                "text": "A1"
                            },{
                              "type": "message",
                                "label": '海外v.s全包式',
                                "text": "A2"
                            },{
                              "type": "message",
                                "label": '覺得價格不平易近人',
                                "text": "A3"
                            }]
                        },{
                            "title": '基本問題',
                            "text": 'A4~A6',
                            "actions": [{
                              "type": "message",
                                "label": '客人要求推薦行程',
                                "text": "A4"
                            },{
                              "type": "message",
                                "label": '長者參加',
                                "text": "A5"
                            },{
                              "type": "message",
                                "label": '單人報名',
                                "text": "A6"
                            }]
                        },{
                            "title": '基本問題',
                            "text": 'A7~A9',
                            "actions": [{
                              "type": "message",
                                "label": '怎麼都只有台北出發',
                                "text": "A7"
                            },{
                              "type": "message",
                                "label": '遇到沒規劃的行程',
                                "text": "A8"
                            },{
                              "type": "message",
                                "label": '客製化時間時應注意',
                                "text": "A9"
                            }]
                        },{
                            "title": '基本問題',
                            "text": 'A10~A12',
                            "actions": [{
                              "type": "message",
                                "label": '前台顯示已滿團或最後機會',
                                "text": "A10"
                            },{
                              "type": "message",
                                "label": '詢問候補狀況',
                                "text": "A11"
                            },{
                              "type": "message",
                                "label": '報名流程款項',
                                "text": "A12"
                            }]
                        },{
                            "title": '基本問題',
                            "text": 'A13、A14、下一頁',
                            "actions": [{
                              "type": "message",
                                "label": '行程有無成團',
                                "text": "A13"
                            },{
                              "type": "message",
                                "label": '匯款訊息',
                                "text": "A14"
                            },{
                              "type": "message",
                                "label": '下一頁',
                                "text": "基本問題-2"
                            }]
                        }]
                        }
                      });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === '基本問題-2') {
                        event.reply({
                            "type": "template",
                            "altText": "Welcome Template",
                            "template": {
                              type: 'carousel',
                        "columns": [{
                            "title": '基本問題-第二頁',
                            "text": 'A15~A17',
                            "actions": [{
                              "type": "message",
                                "label": '貴賓欲報名',
                                "text": "A15"
                            },{
                              "type": "message",
                                "label": '報名完成後',
                                "text": "A16"
                            },{
                              "type": "message",
                                "label": '嬰、幼兒童行程費用',
                                "text": "A17"
                            }]
                        },{
                            "title": '基本問題-第二頁',
                            "text": 'A18~A20',
                            "actions": [{
                              "type": "message",
                                "label": '訂金繳交',
                                "text": "A18"
                            },{
                              "type": "message",
                                "label": '繳完訂金',
                                "text": "A19"
                            },{
                              "type": "message",
                                "label": '單人房差費用',
                                "text": "A20"
                            }]
                        }]
                        }
                      });
                      }
                      else if (event.message.type === 'text' && (message_lineTochat.trim() === 'A1'|| message_lineTochat.trim() === '報名海外或客製化行程')) {
                        let A1 = 'A1:報名海外或客製化行程\n-貼罐頭訊息請上班日專員回覆\n親愛的貴賓您好，請提供您您的姓名、聯絡電話、 EMAIL。\n之後將由海外外專員-千蔚(分機 31)/客製化化專員-雅慈和您聯絡並完成後續報名作業。';
                        io.sockets.emit('new message', {
                            msg: A1,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A1
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A2') {
                        let A2 = 'A2:\n海外v.s全包式\n\n團體旅遊：參加我們的旅遊團，有台灣的領隊、攝影師、當地華語導遊，三位工作人員全程替貴賓們服務~\n\n全包式旅遊：出發日貴賓自行訂定，4-6人即可成行(2人也可費用較高)，彈性方便，是貴賓專屬的私人團!\n從台灣出發，無領隊及攝影師，當地優質華語導遊及司機帶您走透透~\n\n(未含WIFI分享器)';
                        io.sockets.emit('new message', {
                            msg: A2,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A2
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A3') {
                        let A3 = 'A2:覺得價格不平易近人時\n-選擇一個適當的選項給予回覆\n\n(1)我們都是走比較知性及深度的旅遊，全程無自費及購物。\n對於行程內容及住宿用餐皆精心安排及規劃，各景點都會安排專業的導覽老師來服務，也會有隨團秘書服務每位貴賓，所以費用的部份會比稍微高一些喔！\n旅遊品質也是經過許多參與的貴賓所認證的，也歡迎貴賓您來體驗看看呢吃得好，玩得特別，住的舒適！\n都是董事長精心挑選希望能提供給貴賓們一個特別的旅程~\n\n(2)因為您一直辛苦的工作，是該對自己好一點了！\n參加品質好，吃得好，住得好的行程來犒賞自己。\n我們也有合作的銀行提供六期”零利率”的方案來為您分期繳交費用呢～\n請您再次考慮，對自己好、投資自己、愛自己多一點，這樣也會更有自信後，您的收入自然就會源源不絕地到您的面前了，屆時您就一點都不覺得高價位咯呢！\n\n(3)是的，我們知道團費價格較高，所以我們會拿出相對的行程及服務。\n在各景點我們會請專業的導覽老師，仔細為大家介紹跟解說，讓您不會白白走一遭而一無所獲。\n我們除了讓您吃得好，住的好，更讓您把知識帶回家。\n許多貴賓都是一試成主顧呢～～\n另外我們沒有自費行程或是購物行程，也都不用再給任何小費了．\n請您給我們一次機會，讓曾經是空姐的隨團秘書，以及跟著董事長遊台灣的全體，為您一起留下特別印象深刻的旅遊回憶吧！\n另外我們團費可以分三期或六期零利率喔～\n';
                        io.sockets.emit('new message', {
                            msg: A3,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A3
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A4') {
                        let A4 = 'A4:客人要求推薦行程\n可以先詢問目前急需報名的行程，並提供給客人。\n若不喜歡，在提供自己的看法(是可以的)，但通常需要了解公司行程的內容後，才能確實地依照客人的需求介紹行程。\n例如：老人家年紀大～了解需求後再去推薦，不懂行程可以看官網自己去比較看看，絕對不要亂推。 ';
                        io.sockets.emit('new message', {
                            msg: A4,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A4
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A5') {
                        let A5 = 'A5:長者參加\n推薦較輕鬆一點的行程，例如台南、淡水或彰化等等的慢活優閒的行程。';
                        io.sockets.emit('new message', {
                            msg: A5,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A5
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A6') {
                        let A6 = 'A6:單人報名\n太魯閣、苗栗勻淨湖行程不推薦報名\n\n可為客人與同性別旅客配房，或是可以跟秘書or攝影師配房。';
                        io.sockets.emit('new message', {
                            msg: A6,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A6
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A7') {
                        let A7 = 'A7:怎麼都只有台北出發\n很多中南部客人常常會提到的問題，我們也是有可以在其他地方可以集合的喔，可推薦給中南部出發的貴賓介紹的行程唷(其實您在中南部自行前往各集合地點，有時也會更省時也更省錢呢！\n請您就選一個您喜歡的行程，讓我們來為您找尋方法，提供您最適合您的做法來為您服務。\n讓您開心順利出遊，一直是我們所追求的。\n因為您看到您開心的表情，對我們來說都值得了呢)';
                        io.sockets.emit('new message', {
                            msg: A7,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A7
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A8') {
                        let A8 = 'A8:遇到我們沒規劃劃的行程時\n您好，目前我們還在規劃中中呢，還是提供給您參考這個行程看看呢~\n(貼貼類似行程網址)並登表到”特殊需求區”。';
                        io.sockets.emit('new message', {
                            msg: A8,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A8
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A9') {
                        let A9 = 'A9:給貴賓押客製化時間時應注意\n需要3-4周作業期間，若貴賓賓於line上提出出發日低於此作業期間。\n請引導他他們將出發日往後延至諮詢日一個月左右。';
                        io.sockets.emit('new message', {
                            msg: A9,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A9
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A10') {
                        let A10 = 'A10:前台顯示已滿團或最後機會\n(請來電洽詢)\n基本上剩1.2個名額，先詢詢問貴賓有幾人要報名，詢問專員該團剩幾個名額，若能符合需求先替貴賓報名卡位~';
                        io.sockets.emit('new message', {
                            msg: A10,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A10
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A11') {
                        let A11 = 'A11:貴賓詢問候補狀況\n目前無法與您確定呢，要待名額釋出才會候補成功唷，還請您耐心等候呢，若候補成功會請專員於第一時間與您聯繫～～';
                        io.sockets.emit('new message', {
                            msg: A11,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A11
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A12') {
                        let A12 = 'A12:報名流程款項\n\n1.《保留名額》無論於官網、現場、電話、LINE上報名，報名狀態皆為《保留名額》。\n\n2.【訂金繳款通知】《保留名額》後 3~5個工作天內會以EMAIL寄出【訂金繳款通知】，內有報名所需所有資訊、文件及費用明細。\n\n3.《報名成功》請於【訂金繳款通知】指定日期內完成訂金之支付，並回傳護照影本，台胞證（僅福州馬祖）、定型化契約、報名表格才算《報名成功》唷~\n\n4.【成團通知】待達成各團設定之最低報名人數便立即以簡訊發出，最慢將於出發日兩周前通知您所報名之團是否成團。\n如未成團便替貴賓執行轉團或退費之作業 ~\n《轉團》已繳付之訂金可轉至我司國內國外任何日期、地點之行程使用。\n《退費》若因此團並未達到最低報名人數，已繳付之訂金可全額退費，匯款之貴賓請提供銀行帳戶退匯，刷卡則進行刷退作業。\n\n5.【尾款繳款通知】我們最慢將於出發日前兩周左右確定是否成團，確定成團後，以 EMAIL寄出【尾款繳款通知】，請於指定日期內完成尾款之支付，並可準備出發囉~';
                        io.sockets.emit('new message', {
                            msg: A12,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A12
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A13') {
                        let A13 = 'A13:問有無成團\n通常周五會將報名資訊PO再LINE群組裡，若時間較後面的團或是無法確定是否成團請回應。\n因時間較後面目前無法與您確認呢，我們正在努力中讓他成團唷~\n請您務必對我們有信心....等。';
                        io.sockets.emit('new message', {
                            msg: A13,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A13
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A14') {
                        let A14 = 'A14:收到匯款訊息時\n務必確認匯款帳號末五碼，金額，全名和參團行程（含日期）\n出發前 3-5天會有最準確的行前通知跟當團秘書電話等資料！\n出發前一天會由秘書親自致電給您做聯繫～\n在這之前若您有任何需要我們為您協助的地方。\n請您隨時讓我們為您服務祝您今天也是工作事事順心呢。\n';
                        io.sockets.emit('new message', {
                            msg: A14,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A14
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A15') {
                        let A15 = 'A15:貴賓欲報名時\n請貴賓提供以下資料\n貴賓姓名、連絡電話、生日 (西元 19**/**/**)、身分證字號、email、地址、房型（雙人房為一雙人床或兩單人床，參加一日遊無須填寫）、是否有茹素或不吃牛羊等其他?、收據有需要為您開統編抬頭\n(以上訊息務必皆要提供，若您已是參團的貴賓，只需提供全名及生日 ) ';
                        io.sockets.emit('new message', {
                            msg: A15,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A15
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A16') {
                        let A16 = 'A16:替貴賓報名完成後\n罐頭訊息您的訂單已完成囉～訂單編號：我們會為您保留您的訂位至 ****前，在您支付訂金後，您的報名才算是完成。';
                        io.sockets.emit('new message', {
                            msg: A16,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A16
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A17') {
                        let A17 = 'A17:嬰、幼兒童行程費用\n(視各團乘車方式或行程天數而定)\n未滿3歲，則費用為400元不送贈品小孩3～12歲（未滿）費用均減少成人價600元。';
                        io.sockets.emit('new message', {
                            msg: A17,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A17
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A18') {
                        let A18 = 'A18:訂金繳交\n(一天1000元/人)\n1日遊繳交訂金新台幣1,000元\n2日遊繳交訂金新台幣2,000元\n3日遊繳交訂金新台幣3,000元\n報名完成後，請於訂單保留時間內之上班時間繳交訂金。';
                        io.sockets.emit('new message', {
                            msg: A18,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A18
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A19') {
                        let A19 = 'A19:已繳完訂金\n客人跟我們說繳費後，跟客人詢問末五碼及金額。告知當線負責的人(登訊息表)，回覆客人確定款項入帳後會再告知確認收到。';
                        io.sockets.emit('new message', {
                            msg: A19,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A19
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'A20') {
                        let A20 = 'A20:\n單人房差費用\n(**暑假及連續假期房間金額有所異動請至前台再確認**)\n淡水兩天一夜$3200\n苗栗兩天一夜$2200\n台中兩天一夜(林酒店)$2600\n花東三天兩夜$4000\n(暑假及連續假期房間金額有所異動請至前台再確認)\n屏北兩天一夜$2640\n馬祖四天三夜$2200\n馬祖五天四夜$3410\n馬祖六天五夜$3900\n馬祖四天三夜(飛機)$3100\n金門三天兩夜澎湖三天兩夜$6300\n(暑假及連續假期房間金額有所異動請至前台再確認)\n武陵兩天一夜$2100\n彰化兩天一夜$1700\n台南兩天一夜(晶英)$2300\n台南兩天一夜(香格里拉)$2500\n溪頭兩天一夜$2900\n阿里山兩天一夜$4900';
                        io.sockets.emit('new message', {
                            msg: A20,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: A20
                        });
                      }
/*----------------------------------------------------問題分類(B)------------------------------------------------------------*/
                      else if (event.message.type === 'text' && message_lineTochat.trim() === '特殊問題') {
                        event.reply({
                            "type": "template",
                            "altText": "Welcome Template",
                            "template": {
                              type: 'carousel',
                        "columns": [{
                            "title": '特殊問題',
                            "text": 'B1、B2',
                            "actions": [{
                              "type": "message",
                                "label": '何為代收轉付收據',
                                "text": "B1"
                            },{
                              "type": "message",
                                "label": ' ',
                                "text": " "
                            },{
                              "type": "message",
                                "label": '國旅卡相關問題',
                                "text": "B2"
                            }]
                        }]
                        }
                      });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'B1') {
                        let B1 = 'B1:何為代收轉付收據?\n根據交通部觀光局和財政部國稅局的規定,由於是屬於轉手業務,所以旅行社不適用於發票!\n只能開立蓋有公司統一發票章的代收轉付收據!\n也因為如此,所以旅行社在收受客人的付款之後,必須將錢轉付與航空公司、飯店、餐廳、購買門票等等、而旅行社與航空公司、飯店、餐廳、購買門票之間也沒有發票的往來!\n也只是一張上面蓋有統一發票章的代收轉付收據,因此相對的旅行社開給客人的也只是一張上面蓋有統一發票章的!\n可是不要小看這張代收轉付收據喔!\n它除了不能對獎之外,效用等同統一發票喔!';
                        io.sockets.emit('new message', {
                            msg: B1,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: B1
                        });
                      }
                      else if (event.message.type === 'text' && message_lineTochat.trim() === 'B2') {
                        let B2 = 'B2:\n\n＊公務人員休假時於旅宿業國民旅遊卡特約商店刷卡消費，則相連假日之刷卡消費得否請領補助？與休假期間之相連假日住宿，是否符合補助規定？\nＡ：自 106年 3月 1日起，公務人員於與休假期間之相連假日，於旅宿業國民旅遊卡特約商店住宿刷卡消費，除給予核實補助外，該休假期間及其相連假日之連續期間於各國民旅遊卡特約商店之刷卡消費，得按其行業別核實併入觀光旅遊額度或自行運用額度之補助範圍。公務人員週五請休假，且於週六住宿於旅宿業國民旅遊卡特約商店（週六住宿，週日退房），除該筆住宿費用於觀光旅遊額度核實補助外，週五至週日之連續期間於各國民旅遊卡特約商店之刷卡消費，均得按其行業別核實併入觀光旅遊額度或自行運用額度之補助範圍。\n\n＊使用國民旅遊卡刷卡消費，其刷卡日與實際消費日（休假期間或與休假期間相連假日之連續期間）不同之預購型交易，應如何核銷？\nＡ：預購休假期間或與休假期間相連假日之連續期間之交通票券或旅遊套裝行程等預購型交易，其刷卡日期與實際消費日期不同，特18約商店將使用網際網路服務為持卡人鍵入收單機構代號、特約商店代號、卡號、消費金額、消費日、授權碼、行程起迄日、旅遊地等資料至「國民旅遊卡檢核系統」中，經檢核系統比對特約商店鍵入之資料如符合於休假期間或與休假期間相連假日之連續期間以國民旅遊卡在特約商店刷卡消費等條件，該筆預購型交易，得依休假改進措施規定，按其行業別核實併入觀光旅遊額度或自行運用額度之補助範圍，請於消費時提醒特約商店上開事項，方可正確檢核交易。\n\n＊如預購明年初之觀光旅遊行程，而跨年度適逢機關簽約之發卡機構變更，刷卡付款時，究應使用哪張國民旅遊卡？\nＡ：如跨年度適逢機關簽約之國民旅遊卡發卡機構變更，則應以各該年度有效之國民旅遊卡刷卡消費。是以，如於今年度預購明年之觀光旅遊行程且符合休假補助相關規定，仍應以今年有效之國民旅遊卡刷卡，惟於明年度之強制休假補助費額度內予以補助。\n\n＊購買預購型商品時，是否要請休假刷卡?\nA：購買預購型商品時，毋須請休假刷卡，惟實際消費日須符合休假改進措施之相關規定（休假期間或與休假期間相連假日之連續期間）。';
                        io.sockets.emit('new message', {
                            msg: B2,
                            name: receiverId
                        });
                        event.reply({
                            type: 'text',
                            text: B2
                        });
                      }

/*----------------------------------------------------------菜單功能--------------------------------------------------------------*/
    else  if(event.message.type === 'text' && message_lineTochat.trim() === '菜單功能') {
      io.sockets.emit('new message', {
          msg: '已接收菜單功能' + " 餐廳官網  " + "餐廳菜單  ",
          name: receiverId,
      });
      let greet_msg = '菜單功能';
      event.reply({
          "type": "template",
          "altText": "Welcome Template",
          "template": {
              "type": "buttons",
              "thumbnailImageUrl": "https://0-t.imgbox.com/Mim9D7AP.jpg",
              "title": "哈囉!\n歡迎來到嘿鬥，請你選擇底下的選項。",
              "text": greet_msg,
              "actions": [{
                      "type": "uri",
                      "label": "餐廳官網",
                      "uri": "http://www.ha-to.com.tw/"
                  },
                  {
                      "type": "message",
                      "label": "餐廳菜單",
                      "text": "餐廳菜單"
                  }
              ]
          }
      })
    } else if(event.message.type === 'text' && message_lineTochat.trim() === '餐廳菜單') {
      io.sockets.emit('new message', {
          msg: '已接收餐廳菜單' + " 炸豬排定食  " + "海陸烤炸定食  " + "燒煲定食",
          name: receiverId,
      });

      let greet_msg = '餐廳菜單';
      event.reply({
          "type": "template",
          "altText": "Welcome Template",
          "template": {
              "type": "buttons",
              "thumbnailImageUrl": "https://0-t.imgbox.com/JJO1jat5.jpg",
              "title": "請問你查看什類型的定食？",
              "text": greet_msg,
              "actions": [{
                      "type": "message",
                      "label": "炸豬排定食",
                      "text": "炸豬排定食"
                  },
                  {
                      "type": "message",
                      "label": "海陸烤炸定食",
                      "text": "海陸烤炸定食"
                            }
                  ,{
                      "type": "message",
                      "label": "燒煲定食",
                      "text": "燒煲定食"
                              }

                        ]
                    }
                })
              }
              else if(event.message.type === 'text' && message_lineTochat.trim() === '燒煲定食') {
                           io.sockets.emit('new message', {
                               msg: '已接收顯示燒煲定食' + "薑汁燒肉定食"+ "焗燒起司唐揚雞定食"+ "風味炒雞肉定食"+ "野菇燒煲定食定食(素)"+ "北海道極品海煲定食"/* "鹽烤鯖魚定食"+ "和風鮭魚漬定食"*/,
                               name: receiverId,
                           });
                           event.reply({
                               "type": "template",
                               "altText": "Welcome Template",
                               "template": {
                                 type: 'carousel',
                           "columns": [{
                               "thumbnailImageUrl": 'https://0-t.imgbox.com/1duVl5CJ.jpg',
                               "title": '薑汁燒肉定食',
                               "text": '289元',
                               "actions": [{
                                   "type": 'uri',
                                   "label": '前往訂位',
                                   "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                               }]
                           }, {
                               "thumbnailImageUrl": 'https://7-t.imgbox.com/R2PZXeFo.jpg',
                               "title": '焗燒起司唐揚雞定食',
                               "text": '299元',
                               "actions": [{
                                   "type": 'uri',
                                   "label": '前往訂位',
                                   "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                               }]
                           }
                           , {
                               "thumbnailImageUrl": 'https://9-t.imgbox.com/kl2P3DgM.jpg',
                               "title": '風味炒雞肉定食',
                               "text": '309元',
                               "actions": [{
                                   "type": 'uri',
                                   "label": '前往訂位',
                                   "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                               }]
                           }, {
                               "thumbnailImageUrl": 'https://3-t.imgbox.com/5WEzkwgk.jpg',
                               "title": '野菇燒煲定食定食(素)',
                               "text": '279元',
                               "actions": [{
                                   "type": 'uri',
                                   "label": '前往訂位',
                                   "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                               }]
                           }, {
                               "thumbnailImageUrl": 'https://7-t.imgbox.com/BHnmsW3F.jpg',
                               "title": '北海道極品海煲定食',
                               "text": '399元',
                               "actions": [{
                                   "type": 'uri',
                                   "label": '前往訂位',
                                   "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                               }]
                           }]
                           }
                         })
                       }

               else if(event.message.type === 'text' && message_lineTochat.trim() === '海陸烤炸定食') {
                            io.sockets.emit('new message', {
                                msg: '已接收顯示海陸烤炸定食' + "和風炸雞腿定食"+ "南蠻炸雞定食"+ "信州味噌雞燒定食"+ "日式塔醬竹莢揚物定食"+ "海陸組合定食"/*+ "鹽烤鯖魚定食"+ "和風鮭魚漬定食"*/,
                                name: receiverId,
                            });
                            event.reply({
                                "type": "template",
                                "altText": "Welcome Template",
                                "template": {
                                  type: 'carousel',
                            "columns": [{
                                "thumbnailImageUrl": 'https://8-t.imgbox.com/4ZDoCORx.jpg',
                                "title": '和風炸雞腿定食',
                                "text": '289元',
                                "actions": [{
                                    "type": 'uri',
                                    "label": '前往訂位',
                                    "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                                }]
                            }, {
                                "thumbnailImageUrl": 'https://6-t.imgbox.com/ig3jEWZ5.jpg',
                                "title": '南蠻炸雞定食',
                                "text": '299元',
                                "actions": [{
                                    "type": 'uri',
                                    "label": '前往訂位',
                                    "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                                }]
                            }
                            , {
                                "thumbnailImageUrl": 'https://6-t.imgbox.com/a45I2TUs.jpg',
                                "title": '信州味噌雞燒定食',
                                "text": '299元',
                                "actions": [{
                                    "type": 'uri',
                                    "label": '前往訂位',
                                    "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                                }]
                            }, {
                                "thumbnailImageUrl": 'https://1-t.imgbox.com/VzHBr5cD.jpg',
                                "title": '日式塔醬竹莢揚物定食',
                                "text": '299元',
                                "actions": [{
                                    "type": 'uri',
                                    "label": '前往訂位',
                                    "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                                }]
                            }, {
                                "thumbnailImageUrl": 'https://3-t.imgbox.com/04EmhHuO.jpg',
                                "title": '海陸組合定食',
                                "text": '329元',
                                "actions": [{
                                    "type": 'uri',
                                    "label": '前往訂位',
                                    "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                                }]
                            }]/*, {
                                "thumbnailImageUrl": 'https://3-t.imgbox.com/04EmhHuO.jpg',
                                "title": '鹽烤鯖魚定食',
                                "text": '349元',
                                "actions": [{
                                    "type": 'uri',
                                    "label": '前往訂位',
                                    "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                                }]
                            }, {
                                "thumbnailImageUrl": 'https://0-t.imgbox.com/OVrM2seL.jpg',
                                "title": '和風鮭魚漬定食',
                                "text": '399元',
                                "actions": [{
                                    "type": 'uri',
                                    "label": '前往訂位',
                                    "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                                }]
                            }*/
                            }
                          })
                        }

                        else if(event.message.type === 'text' && message_lineTochat.trim() === '炸豬排定食') {
                                     io.sockets.emit('new message', {
                                         msg: '已接收顯示炸豬排定食' + "炸里肌肉豬排定食"+ "炸腰內肉豬排定食"+ "炸起司豬排定食",
                                         name: receiverId,
                                     });
                                     event.reply({
                                         "type": "template",
                                         "altText": "Welcome Template",
                                         "template": {
                                           type: 'carousel',
                                     "columns": [{
                                         "thumbnailImageUrl": 'https://7-t.imgbox.com/hTnKViSP.jpg',
                                         "title": '炸里肌肉豬排定食',
                                         "text": '269元',
                                         "actions": [{
                                             "type": 'uri',
                                             "label": '前往訂位',
                                             "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                                         }]
                                     }, {
                                         "thumbnailImageUrl": 'https://2-t.imgbox.com/CQtDUIb4.jpg',
                                         "title": '炸腰內肉豬排定食',
                                         "text": '269元',
                                         "actions": [{
                                             "type": 'uri',
                                             "label": '前往訂位',
                                             "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                                         }]
                                     }
                                     , {
                                         "thumbnailImageUrl": 'https://8-t.imgbox.com/eovywVkf.jpg',
                                         "title": '炸起司豬排定食',
                                         "text": '309元',
                                         "actions": [{
                                             "type": 'uri',
                                             "label": '前往訂位',
                                             "uri": 'https://tw.eztable.com/restaurant/13419?from_type=search'
                                         }]
                                     }]
                                     }
                                   })
                                 }

/*----------------------------------------------------購物車------------------------------------------------------------*/
    else if(event.message.type === 'text' && message_lineTochat.trim() === '購物車功能') {
      io.sockets.emit('new message', {
          msg: '已接收顯示購物車功能' + "女裝  " + "男裝  ",
          name: receiverId,
      });

      let greet_msg = '我是UNI小精靈!\n歡迎來到Uniqlo的商店，選擇下面選項搜尋你要的服飾。\n\n選擇服飾後，會前往Uniqlo購物車(確認此商品是否還有存貨)';
      event.reply({
          "type": "template",
          "altText": "Welcome Template",
          "template": {
              "type": "buttons",
              "text": greet_msg,
              "actions": [{
                      "type": "message",
                      "label": "女裝",
                      "text": "女裝"
                  },
                  {
                      "type": "message",
                      "label": "男裝",
                      "text": "男裝"
                  },
              ]
          }
      })
    }    else if(event.message.type === 'text' && message_lineTochat.trim() === '女裝') {
          io.sockets.emit('new message', {
              msg: '已接收顯示女裝' + "女裝POLO衫  " + "女裝T恤(長袖/七分袖)",
              name: receiverId,
          });

          let greet_msg = '你想找哪一類的衣服呢？';
          event.reply({
              "type": "template",
              "altText": "Welcome Template",
              "template": {
                  "type": "buttons",
                  "thumbnailImageUrl": "https://3-t.imgbox.com/ZnXsAKmo.jpg",
                  "text": greet_msg,
                  "actions": [{
                          "type": "message",
                          "label": "女裝POLO衫",
                          "text": "女裝POLO衫"
                      },
                      {
                          "type": "message",
                          "label": "女裝T恤(長袖/七分袖)",
                          "text": "女裝T恤(長袖/七分袖)"
                      },
                  ]
              }
          })
        } else if(event.message.type === 'text' && message_lineTochat.trim() === '男裝') {
              io.sockets.emit('new message', {
                  msg: '已接收顯示男裝' + "男裝POLO衫  " + "男裝牛仔褲  ",
                  name: receiverId,
              });

              let greet_msg = '你想找哪一類的衣服呢？';
              event.reply({
                  "type": "template",
                  "altText": "Welcome Template",
                  "template": {
                      "type": "buttons",
                      "thumbnailImageUrl": "https://0-t.imgbox.com/urSn5N9M.jpg",
                      "text": greet_msg,
                      "actions": [{
                              "type": "message",
                              "label": "男裝POLO衫",
                              "text": "男裝POLO衫"
                          },
                          {
                              "type": "message",
                              "label": "男裝牛仔褲",
                              "text": "男裝牛仔褲"
                          },
                      ]
                  }
              })
            }
            else if(event.message.type === 'text' && message_lineTochat.trim() === '女裝POLO衫') {
                  io.sockets.emit('new message', {
                      msg: '已接收顯示女裝POLO衫' + "彈性網眼POLO衫(女)" + "寬版開領POLO衫(女)" + "羅紋POLO衫(短袖)(女)",
                      name: receiverId,
                  });
                  event.reply({
                      "type": "template",
                      "altText": "Welcome Template",
                      "template": {
                        type: 'carousel',
                  "columns": [{
                      "thumbnailImageUrl": 'https://7-t.imgbox.com/7ldQdjRB.jpg',
                      "title": '彈性網眼POLO衫(女)',
                      "text": 'NT$590',
                      "actions": [{
                          "type": 'uri',
                          "label": '前往購物車',
                          "uri": 'http://www.uniqlo.com/tw/store/addcart/goods/182222-69'
                      }]
                  }, {
                      "thumbnailImageUrl": 'https://7-t.imgbox.com/mNhSZSKr.jpg',
                      "title": '寬版開領POLO衫(女)',
                      "text": 'NT$590',
                      "actions": [{
                          "type": 'uri',
                          "label": '前往購物車',
                          "uri": 'http://www.uniqlo.com/tw/store/goods/188203'
                      }]
                  }
                  , {
                      "thumbnailImageUrl": 'https://6-t.imgbox.com/T5AWfToR.jpg',
                      "title": '羅紋POLO衫(短袖)(女)',
                      "text": 'NT$390',
                      "actions": [{
                          "type": 'uri',
                          "label": '前往購物車',
                          "uri": 'http://www.uniqlo.com/tw/store/goods/193086'
                      }]
                  }]
                  }
                })
              }
              else if(event.message.type === 'text' && message_lineTochat.trim() === '女裝T恤(長袖/七分袖)') {
                    io.sockets.emit('new message', {
                        msg: '已接收女裝T恤' + "一字領上衣T恤(女)" + "SUPIMA COTTON 圓領T恤(7分袖)(女)" + "SUPIMA COTTON 圓領T恤(長袖)(女)",
                        name: receiverId,
                    });
                    event.reply({
                        "type": "template",
                        "altText": "Welcome Template",
                        "template": {
                          type: 'carousel',
                    "columns": [{
                        "thumbnailImageUrl": 'https://9-t.imgbox.com/IqZyIqGX.jpg',
                        "title": '一字領上衣T恤(女)',
                        "text": 'NT$590',
                        "actions": [{
                            "type": 'uri',
                            "label": '前往購物車',
                            "uri": 'http://www.uniqlo.com/tw/store/goods/199888'
                        }]
                    }, {
                        "thumbnailImageUrl": 'https://6-t.imgbox.com/gDRPXNSC.jpg',
                        "title": 'SUPIMA COTTON 圓領T恤(7分袖)(女)',
                        "text": 'NT$390',
                        "actions": [{
                            "type": 'uri',
                            "label": '前往購物車',
                            "uri": 'http://www.uniqlo.com/tw/store/goods/182153'
                        }]
                    }
                    , {
                        "thumbnailImageUrl": 'https://0-t.imgbox.com/q7MCHAQR.jpg',
                        "title": 'SUPIMA COTTON 圓領T恤(長袖)(女)',
                        "text": 'NT$390',
                        "actions": [{
                            "type": 'uri',
                            "label": '前往購物車',
                            "uri": 'http://www.uniqlo.com/tw/store/goods/182154'
                        }]
                    }]
                    }
                  })
                }
                else if(event.message.type === 'text' && message_lineTochat.trim() === '男裝POLO衫') {
                      io.sockets.emit('new message', {
                          msg: '已接收顯示男裝POLO衫' + "DRY 網眼條紋POLO衫(短袖)(男)" + "DRY EX POLO衫(短袖)(男)" + "DRY 舒適襯衫領POLO衫(短袖)(鈕釦領)(男)",
                          name: receiverId,
                      });
                      event.reply({
                          "type": "template",
                          "altText": "Welcome Template",
                          "template": {
                            type: 'carousel',
                      "columns": [{
                          "thumbnailImageUrl": 'https://8-t.imgbox.com/RNwQRq98.jpg',
                          "title": 'DRY 網眼條紋POLO衫(短袖)(男)',
                          "text": 'NT$790',
                          "actions": [{
                              "type": 'uri',
                              "label": '前往購物車',
                              "uri": 'http://www.uniqlo.com/tw/store/goods/195393'
                          }]
                      }, {
                          "thumbnailImageUrl": 'https://9-t.imgbox.com/Htmjhe7W.jpg',
                          "title": 'DRY EX POLO衫(短袖)(男)',
                          "text": 'NT$790',
                          "actions": [{
                              "type": 'uri',
                              "label": '前往購物車',
                              "uri": 'http://www.uniqlo.com/tw/store/goods/169372'
                          }]
                      }
                      , {
                          "thumbnailImageUrl": 'https://2-t.imgbox.com/LSYcL4tL.jpg',
                          "title": 'DRY 舒適襯衫領POLO衫(短袖)(鈕釦領)(男)',
                          "text": 'NT$790',
                          "actions": [{
                              "type": 'uri',
                              "label": '前往購物車',
                              "uri": 'http://www.uniqlo.com/tw/store/goods/193623'
                          }]
                      }]
                      }
                    })
                  }
                  else if(event.message.type === 'text' && message_lineTochat.trim() === '男裝牛仔褲') {
                        io.sockets.emit('new message', {
                            msg: '已接收顯示男裝牛仔褲' + "Slim Fit 束口牛仔褲(男)" + "Regular Fit 刷破牛仔褲(男)" + "MIRACLE AIR REGULAR FIT 牛仔褲(男)",
                            name: receiverId,
                        });
                        event.reply({
                            "type": "template",
                            "altText": "Welcome Template",
                            "template": {
                              type: 'carousel',
                        "columns": [{
                            "thumbnailImageUrl": 'https://6-t.imgbox.com/BHbTLzct.jpg',
                            "title": 'Slim Fit 束口牛仔褲(男)',
                            "text": 'NT$990',
                            "actions": [{
                                "type": 'uri',
                                "label": '前往購物車',
                                "uri": 'http://www.uniqlo.com/tw/store/goods/183006'
                            }]
                        }, {
                            "thumbnailImageUrl": 'https://7-t.imgbox.com/fsfzvmNz.jpg',
                            "title": 'Regular Fit 刷破牛仔褲(男)',
                            "text": 'NT$1490',
                            "actions": [{
                                "type": 'uri',
                                "label": '前往購物車',
                                "uri": 'http://www.uniqlo.com/tw/store/goods/192943'
                            }]
                        }
                        , {
                            "thumbnailImageUrl": 'https://2-t.imgbox.com/1CY1M5aq.jpg',
                            "title": 'MIRACLE AIR REGULAR FIT 牛仔褲(男)',
                            "text": 'NT$1490',
                            "actions": [{
                                "type": 'uri',
                                "label": '前往購物車',
                                "uri": 'http://www.uniqlo.com/tw/store/goods/403888'
                            }]
                        }]
                        }
                      })
                    }
/*----------------------------------------------------問卷功能------------------------------------------------------------*/
else if(event.message.type === 'text' && message_lineTochat.trim() === '問卷功能') {
      io.sockets.emit('new message', {
          msg: '已接收問卷功能' + "Google Form問卷" + "SurveyCake問卷" + "Line@問卷",
          name: receiverId,
      });
      event.reply({
          "type": "template",
          "altText": "Welcome Template",
          "template": {
              "type": "buttons",
              "title": "問卷功能列表",
              "text": "請選擇要做哪份問卷。",
              "actions": [{
                      "type": "uri",
                      "label": "Google Form問卷",
                      "uri": 'https://docs.google.com/a/fongyuinvest.com/forms/d/e/1FAIpQLScjfeF9gEmXjk_MgI7cFPpZoTTJU6KCpVv-igEJb5xvdUGFyg/viewform'
                  },
                  {
                      "type": "uri",
                      "label": "SurveyCake問卷",
                      "uri": 'https://www.surveycake.com/s/Mv3RD'
                            }
                  ,{
                      "type": "message",
                      "label": "Line@問卷",
                      "text": "Line@問卷"
                              }

                        ]
                    }
                })
  }

                else {
        io.sockets.emit('new message', {
            msg: message_lineTochat,
            name: receiverId
        });
        usersRef.push({
            message: message_lineTochat,
            user: receiverId,
            messageTime: date.toString()
        });
    }
    // 訊息是xxxxxx, template message
    // AI 機器人 設定
    // var request = appApiai.textRequest(message_lineTochat, {
    //     sessionId: '46110120-6a78-4a0e-a5f0-a8596b53d37e'
    // });
    // request.on('response', function(response) {
    //     console.log(response);
    //     let res_msg = response.result.fulfillment.speech
    //     if (response.result.action !== 'input.unknown') {
    //         io.sockets.emit('new message', {
    //             msg: res_msg,
    //             name: 'BOT'
    //         });
    //         event.reply({
    //             type: 'text',
    //             text: 'BOT：' + res_msg
    //         });
    //     }
    // });
    // request.on('error', function(error) {
    //     console.log(error);
    // });
    // request.end();
    // AI  機器人 end

});
app.post('/webhook/', linebotParser);


/*Socket.io*/
//連接
io.sockets.on('connection', (socket) => {

    // 新使用者
    socket.on('new user', (data, callback) => {
        // if(nicknames.indexOf(data) != -1){
        if (data in users) {
            callback(false);
        } else {
            callback(true);
            socket.nickname = data;
            users[socket.nickname] = socket;
            // nicknames.push(socket.nickname);
            // updateNicknames();
        }
    });

    // function updateNicknames() {
    //     io.sockets.emit('usernames', Object.keys(users));
    // }

    // 從SHIELD chat傳送訊息
    socket.on('send message', (data, callback) => {
        console.log(data, receiverId);
        var msg = data.trim();
        var message;

        if (msg.includes('/sticker')) {
            message = {
                type: "sticker",
                packageId: "1",
                stickerId: "10"
            };
        } else {
            message = {
                type: "text",
                text: msg
            };
        }

        let d = Date.now();
        let date = new Date(d);

        // 訊息傳到後台介面上
        if (msg.indexOf('.com') !== -1 || msg.indexOf('.edu') !== -1 || msg.indexOf('.net') !== -1 || msg.indexOf('.io') !== -1 || msg.indexOf('.org') !== -1) {
            if (message_lineTochat.indexOf('https') !== -1 || message_lineTochat.indexOf('http') !== -1) {
                io.sockets.emit('new message', {
                    msg: '<a href=' + message_lineTochat + '>' + message_lineTochat + '</a>',
                    name: 'Agent ' + socket.nickname,
                    id: receiverId
                });
            } else {
                io.sockets.emit('new message', {
                    msg: '<a href="https://' + message_lineTochat + '/" target="_blank">' + message_lineTochat + '</a>',
                    name: 'Agent ' + socket.nickname,
                    id: receiverId
                });
            }
        } else if (msg.includes('/sticker')) {
            io.sockets.emit('new message', {
                msg: 'Send sticker to user',
                name: 'Agent ' + socket.nickname,
                id: receiverId
            });
        } else {
            io.sockets.emit('new message', {
                msg: msg,
                name: 'Agent ' + socket.nickname,
                id: receiverId
            });
        }

        // 訊息傳到LINE
        if (receiverId !== undefined) {
            bot.push(receiverId, message);
        }

        // 訊息儲存到firebase資料庫
        agentsRef.push({
            message: msg,
            agent: socket.nickname,
            messageTime: date.toString()
        });
    });

    socket.on('disconnect', (data) => {
        if (!socket.nickname) return;
        delete users[socket.nickname];
        // nicknames.splice(nicknames.indexOf(socket.nickname), 1);
        // updateNicknames();
    });
});

// catch 404 and forward to error handler
app.use(function(req, res, next) {
    var err = new Error('Not Found');
    err.status = 404;
    next(err);
});

// error handler
app.use(function(err, req, res, next) {
    // set locals, only providing error in development
    res.locals.message = err.message;
    res.locals.error = req.app.get('env') === 'development' ? err : {};

    // render the error page
    res.status(err.status || 500);
    res.render('error');
});

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
        // named pipe
        return val;
    }

    if (port >= 0) {
        // port number
        return port;
    }

    return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string' ?
        'Pipe ' + port :
        'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string' ?
        'pipe ' + addr :
        'port ' + addr.port;
    debug('Listening on ' + bind);
}
